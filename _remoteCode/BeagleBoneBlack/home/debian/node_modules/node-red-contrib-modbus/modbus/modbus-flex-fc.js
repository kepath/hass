"use strict";module.exports=function(r){require("source-map-support").install();var i=require("./modbus-basics"),d=require("./core/modbus-core"),u=require("debug")("contribModbus:read");r.nodes.registerType("modbus-flex-fc",function(e){r.nodes.createNode(this,e),this.name=e.name,this.topic=e.topic,this.unitid=e.unitid,this.showStatusActivities=e.showStatusActivities,this.showErrors=e.showErrors,this.showWarnings=e.showWarnings,this.connection=null,this.emptyMsgOnFail=e.emptyMsgOnFail,this.internalDebugLog=u,this.verboseLogging=r.settings.verbose,this.fc=e.fc,this.requestCard=e.requestCard,this.responseCard=e.responseCard;var n=this;function o(e){r.settings.verbose&&n.showWarnings&&n.warn("Read -> "+e+" address: "+n.adr)}n.statusText="waiting",t(n.statusText),o("open node "+n.id);var s=r.nodes.getNode(e.server);function t(e){var e=i.setNodeStatusProperties(e,n.showStatusActivities),o=n.statusText,s=e.status;s!==o&&n.status({fill:e.fill,shape:e.shape,text:s})}s&&(n.onModbusInit=function(){t("initialized")},n.onModbusConnect=function(){t("connected"),n.modbusRead()},n.onModbusRegister=function(){n.showStatusActivities&&t("registered"),s.serialSendingAllowed&&t("connected")},n.onModbusActive=function(){t("active")},n.onModbusQueue=function(){t("queue")},n.onModbusError=function(e){t("failure"),n.showErrors&&n.warn(e)},n.onModbusClose=function(){t("closed")},n.onModbusBroken=function(){t("broken")},n.onModbusReadDone=function(e,o){var s;n.showStatusActivities&&t("reading done"),e.data,s=o.topic||n.topic,n.send({topic:s,payload:e,input:o,sendingNodeId:n.id})},n.errorProtocolMsg=function(e,o){n.showErrors&&i.logMsgError(n,e,o)},n.onModbusReadError=function(e,o){n.internalDebugLog(e.message),n.errorProtocolMsg(e,o),i.sendEmptyMsgOnFail(n,e,o),i.setModbusError(n,s,e,o)},n.modbusRead=function(){var e;s.client?(e={topic:"customFc",from:n.name,payload:{unitid:parseInt(n.unitid),fc:parseInt(n.fc,16),requestCard:n.requestCard,responseCard:n.responseCard,messageId:d.getObjectId()}},n.showStatusActivities&&t("reading"),s.emit("customModbusMessage",e,n.onModbusReadDone,n.onModbusReadError)):t("waiting")},n.removeNodeListenerFromModbusClient=function(){s.removeListener("mbinit",n.onModbusInit),s.removeListener("mbqueue",n.onModbusQueue),s.removeListener("mbconnected",n.onModbusConnect),s.removeListener("mbactive",n.onModbusActive),s.removeListener("mberror",n.onModbusError),s.removeListener("mbclosed",n.onModbusClose),s.removeListener("mbbroken",n.onModbusBroken),s.removeListener("mbregister",n.onModbusRegister),s.removeListener("mbderegister",n.onModbusClose)},this.on("close",function(e){n.resetAllReadingTimer(),n.removeNodeListenerFromModbusClient(),t("closed"),o("close node "+n.id),s.deregisterForModbus(n.id,e)}),n.showStatusActivities&&(s.on("mbinit",n.onModbusInit),s.on("mbqueue",n.onModbusQueue)),s.on("mbconnected",n.onModbusConnect),s.on("mbactive",n.onModbusActive),s.on("mberror",n.onModbusError),s.on("mbclosed",n.onModbusClose),s.on("mbbroken",n.onModbusBroken),s.on("mbregister",n.onModbusRegister),s.on("mbderegister",n.onModbusClose),s.registerForModbus(n))}),r.httpAdmin.post("/modbus/fc/si/:id",r.auth.needsPermission("modbus.read"),function(e,s){var o=require("fs"),n=require("node:path"),e=e.body.mapPath||"./extras/argumentMaps/defaults/",t="codes.json";o.existsSync(n.resolve(e,t))&&o.readFile(n.resolve(e,t),function(e,o){e&&s.json([e]),s.json(JSON.parse(o))})})};
//# sourceMappingURL=maps/modbus-flex-fc.js.map

"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const joi_1 = __importDefault(require("joi"));
const helpers_1 = require("../../common/controllers/helpers");
const InputService_1 = __importDefault(require("../../common/services/InputService"));
const Status_1 = __importDefault(require("../../common/status/Status"));
const const_1 = require("../../const");
const globals_1 = require("../../globals");
const migrate_1 = require("../../helpers/migrate");
const node_1 = require("../../helpers/node");
const homeAssistant_1 = require("../../homeAssistant");
const FireEventController_1 = __importDefault(require("./FireEventController"));
const inputs = {
    event: {
        messageProp: 'payload.event',
        configProp: 'event',
    },
    data: {
        messageProp: 'payload.data',
        configProp: 'data',
    },
    dataType: {
        messageProp: 'payload.dataType',
        configProp: 'dataType',
    },
};
const inputSchema = joi_1.default.object({
    event: joi_1.default.string(),
    data: joi_1.default.alternatives().try(joi_1.default.string().empty(''), joi_1.default.object()),
    dataType: joi_1.default.string().valid(const_1.TypedInputTypes.JSON, const_1.TypedInputTypes.JSONata),
});
function fireEventNode(config) {
    globals_1.RED.nodes.createNode(this, config);
    this.config = (0, migrate_1.migrate)(config);
    const serverConfigNode = (0, node_1.getServerConfigNode)(this.config.server);
    const homeAssistant = (0, homeAssistant_1.getHomeAssistant)(serverConfigNode);
    const status = new Status_1.default({
        config: serverConfigNode.config,
        node: this,
    });
    const inputService = new InputService_1.default({
        inputs,
        nodeConfig: this.config,
        schema: inputSchema,
    });
    const controllerDeps = (0, helpers_1.createControllerDependencies)(this, homeAssistant);
    // eslint-disable-next-line no-new
    new FireEventController_1.default({
        inputService,
        node: this,
        status,
        ...controllerDeps,
    });
}
exports.default = fireEventNode;

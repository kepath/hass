"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TimeUnit = exports.TypedInputTypes = exports.ValueIntegrationMode = exports.NodeType = exports.EntityFilterType = exports.EntityType = exports.DeviceCapabilityType = exports.ComparatorType = exports.TAGS_ALL = exports.PRINT_TO_DEBUG_TOPIC = exports.SERVER_ADD = exports.STATE_RUNNING = exports.STATE_ERROR = exports.STATE_DISCONNECTED = exports.STATE_CONNECTED = exports.STATE_CONNECTING = exports.NO_VERSION = exports.INTEGRATION_UNLOADED = exports.INTEGRATION_NOT_LOADED = exports.INTEGRATION_LOADED = exports.INTEGRATION_EVENT = exports.HA_MIN_VERSION = exports.HA_EVENTS = exports.HA_EVENT_INTEGRATION = exports.HA_EVENT_SERVICES_UPDATED = void 0;
exports.HA_EVENT_SERVICES_UPDATED = 'services_updated';
exports.HA_EVENT_INTEGRATION = 'nodered';
exports.HA_EVENTS = 'ha_events';
exports.HA_MIN_VERSION = '2023.12';
exports.INTEGRATION_EVENT = 'integration';
exports.INTEGRATION_LOADED = 'loaded';
exports.INTEGRATION_NOT_LOADED = 'notloaded';
exports.INTEGRATION_UNLOADED = 'unloaded';
exports.NO_VERSION = '0.0.0';
exports.STATE_CONNECTING = 0;
exports.STATE_CONNECTED = 1;
exports.STATE_DISCONNECTED = 2;
exports.STATE_ERROR = 3;
exports.STATE_RUNNING = 4;
exports.SERVER_ADD = '_ADD_';
exports.PRINT_TO_DEBUG_TOPIC = 'home-assistant-print-to-debug';
exports.TAGS_ALL = '__ALL_TAGS__';
var ComparatorType;
(function (ComparatorType) {
    ComparatorType["Is"] = "is";
    ComparatorType["IsNot"] = "is_not";
    ComparatorType["IsLessThan"] = "lt";
    ComparatorType["IsLessThanOrEqual"] = "lte";
    ComparatorType["IsGreaterThan"] = "gt";
    ComparatorType["IsGreaterThanOrEqual"] = "gte";
    ComparatorType["Includes"] = "includes";
    ComparatorType["DoesNotInclude"] = "does_not_include";
    ComparatorType["Contains"] = "cont";
    ComparatorType["DoesNotContain"] = "does_not_cont";
    ComparatorType["StartsWith"] = "starts_with";
    ComparatorType["InGroup"] = "in_group";
    ComparatorType["JSONata"] = "jsonata";
    ComparatorType["IsNull"] = "is_null";
    ComparatorType["IsNotNull"] = "is_not_null";
    ComparatorType["IsTrue"] = "is_true";
    ComparatorType["IsFalse"] = "is_false";
    ComparatorType["Regex"] = "regex";
})(ComparatorType || (exports.ComparatorType = ComparatorType = {}));
var DeviceCapabilityType;
(function (DeviceCapabilityType) {
    DeviceCapabilityType["Boolean"] = "boolean";
    DeviceCapabilityType["Float"] = "float";
    DeviceCapabilityType["Integer"] = "integer";
    DeviceCapabilityType["PositiveTimePeriod"] = "positive_time_period_dict";
    DeviceCapabilityType["Select"] = "select";
    DeviceCapabilityType["String"] = "string";
})(DeviceCapabilityType || (exports.DeviceCapabilityType = DeviceCapabilityType = {}));
var EntityType;
(function (EntityType) {
    EntityType["BinarySensor"] = "binary_sensor";
    EntityType["Button"] = "button";
    EntityType["Number"] = "number";
    EntityType["Select"] = "select";
    EntityType["Sensor"] = "sensor";
    EntityType["Switch"] = "switch";
    EntityType["Text"] = "text";
    EntityType["Time"] = "time";
})(EntityType || (exports.EntityType = EntityType = {}));
var EntityFilterType;
(function (EntityFilterType) {
    EntityFilterType["Exact"] = "exact";
    EntityFilterType["List"] = "list";
    EntityFilterType["Regex"] = "regex";
    EntityFilterType["Substring"] = "substring";
})(EntityFilterType || (exports.EntityFilterType = EntityFilterType = {}));
var NodeType;
(function (NodeType) {
    NodeType["Action"] = "api-call-service";
    NodeType["API"] = "ha-api";
    NodeType["CurrentState"] = "api-current-state";
    NodeType["Device"] = "ha-device";
    NodeType["Entity"] = "ha-entity";
    NodeType["EventsAll"] = "server-events";
    NodeType["EventsCalendar"] = "ha-events-calendar";
    NodeType["EventsState"] = "server-state-changed";
    NodeType["FireEvent"] = "ha-fire-event";
    NodeType["GetEntities"] = "ha-get-entities";
    NodeType["GetHistory"] = "api-get-history";
    NodeType["PollState"] = "poll-state";
    NodeType["RenderTemplate"] = "api-render-template";
    NodeType["Select"] = "ha-select";
    NodeType["Sentence"] = "ha-sentence";
    NodeType["TriggerState"] = "trigger-state";
    NodeType["Tag"] = "ha-tag";
    NodeType["Time"] = "ha-time";
    NodeType["WaitUntil"] = "ha-wait-until";
    NodeType["Webhook"] = "ha-webhook";
    NodeType["Zone"] = "ha-zone";
    NodeType["Server"] = "server";
    NodeType["DeviceConfig"] = "ha-device-config";
    NodeType["EntityConfig"] = "ha-entity-config";
    NodeType["BinarySensor"] = "ha-binary-sensor";
    NodeType["Button"] = "ha-button";
    NodeType["Number"] = "ha-number";
    NodeType["Sensor"] = "ha-sensor";
    NodeType["Switch"] = "ha-switch";
    NodeType["Text"] = "ha-text";
    NodeType["TimeEntity"] = "ha-time-entity";
    NodeType["UpdateConfig"] = "ha-update-config";
})(NodeType || (exports.NodeType = NodeType = {}));
var ValueIntegrationMode;
(function (ValueIntegrationMode) {
    ValueIntegrationMode["Get"] = "get";
    ValueIntegrationMode["Set"] = "set";
    ValueIntegrationMode["Listen"] = "listen";
})(ValueIntegrationMode || (exports.ValueIntegrationMode = ValueIntegrationMode = {}));
var TypedInputTypes;
(function (TypedInputTypes) {
    TypedInputTypes["Message"] = "msg";
    TypedInputTypes["Flow"] = "flow";
    TypedInputTypes["Global"] = "global";
    TypedInputTypes["Boolean"] = "bool";
    TypedInputTypes["JSON"] = "json";
    TypedInputTypes["Date"] = "date";
    TypedInputTypes["JSONata"] = "jsonata";
    TypedInputTypes["Number"] = "num";
    TypedInputTypes["String"] = "str";
    TypedInputTypes["None"] = "none";
    TypedInputTypes["Config"] = "config";
    TypedInputTypes["Data"] = "data";
    TypedInputTypes["Entity"] = "entity";
    TypedInputTypes["EntityState"] = "entityState";
    TypedInputTypes["EventData"] = "eventData";
    TypedInputTypes["Headers"] = "headers";
    TypedInputTypes["Params"] = "params";
    TypedInputTypes["TriggerId"] = "triggerId";
    TypedInputTypes["PrevEntity"] = "prevEntity";
    TypedInputTypes["Results"] = "results";
    TypedInputTypes["Regex"] = "re";
    TypedInputTypes["Value"] = "value";
    TypedInputTypes["PreviousValue"] = "previousValue";
    TypedInputTypes["CalendarItem"] = "calendarItem";
    TypedInputTypes["DeviceId"] = "deviceId";
    TypedInputTypes["Enviroment"] = "env";
})(TypedInputTypes || (exports.TypedInputTypes = TypedInputTypes = {}));
var TimeUnit;
(function (TimeUnit) {
    TimeUnit["Milliseconds"] = "milliseconds";
    TimeUnit["Seconds"] = "seconds";
    TimeUnit["Minutes"] = "minutes";
    TimeUnit["Hours"] = "hours";
    TimeUnit["Days"] = "days";
})(TimeUnit || (exports.TimeUnit = TimeUnit = {}));

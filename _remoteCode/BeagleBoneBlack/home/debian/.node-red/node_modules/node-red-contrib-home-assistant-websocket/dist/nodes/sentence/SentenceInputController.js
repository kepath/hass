"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const InputOutputController_1 = __importDefault(require("../../common/controllers/InputOutputController"));
const InputError_1 = __importDefault(require("../../common/errors/InputError"));
const NoConnectionError_1 = __importDefault(require("../../common/errors/NoConnectionError"));
const Integration_1 = require("../../common/integration/Integration");
const InputService_1 = require("../../common/services/InputService");
class SentenceController extends InputOutputController_1.default {
    async onInput({ done, message, parsedMessage, send, }) {
        var _a, _b;
        if (!((_a = this.integration) === null || _a === void 0 ? void 0 : _a.isConnected)) {
            throw new NoConnectionError_1.default();
        }
        if (!((_b = this.integration) === null || _b === void 0 ? void 0 : _b.isIntegrationLoaded)) {
            throw new InputError_1.default('home-assistant.error.integration_not_loaded', 'home-assistant.status.error');
        }
        const response = parsedMessage.response.source === InputService_1.DataSource.Config
            ? await this.typedInputService.getValue(parsedMessage.response.value, parsedMessage.responseType.value, {
                message,
            })
            : parsedMessage.response.value;
        this.status.setSending();
        await this.homeAssistant.websocket.send({
            type: Integration_1.MessageType.SentenceResponse,
            response,
            response_id: parsedMessage.responseId.value,
        });
        await this.setCustomOutputs(this.node.config.outputProperties, message, {
            config: this.node.config,
        });
        this.status.setSuccess();
        send(message);
        done();
    }
}
exports.default = SentenceController;

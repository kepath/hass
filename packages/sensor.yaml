---
sensor:
  - platform: "feedparser"
    name: "RSS Hass Alerts"
    feed_url: "https://alerts.home-assistant.io/feed.xml"
    date_format: "%a, %b %d %I:%M %p"
    inclusions:
      - "title"
      - "link"
      - "description"
      - "image"
      - "language"
      - "pubDate"
    exclusions:
      - "language"
  - platform: "tautulli"
    name: "Plex State Tautulli"
    host: !secret "ha_rj45_ip"
    api_key: !secret "tautulli_api_key"
  # - platform: "mqtt"
  #   state_topic: "homeassistant/sensor/tautulli/all"
  #   unique_id: "tautulli_mqtt_status"
  #   name: "Plex State MQTT"
  #   value_template: "'{{ value_json.body }}'"

  # - platform: "mqtt"
  #   state_topic: "zigbee2mqtt/bridge/networkmap/raw"
  #   name: "Zigbee2mqtt Networkmap"
  #   value_template: >-
  #     {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
  #   json_attributes_topic: zigbee2mqtt/bridge/networkmap/raw

  # - platform: sql
  #   db_url: !secret hass_addon_mariadb_url
  #   queries:
  #   - name: HASS DB size
  #     query: !secret hass_addon_mariadb_size_query
  #     column: 'value'
  #     unit_of_measurement: MB
  - platform: "bitcoin"
    currency: "GBP"
    display_options:
      - "exchangerate"
      - "trade_volume_btc"
  - platform: "template"
    sensors:
      date_long:
        friendly_name: "Date and Day of week"
        value_template: >
          {% set months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"] %}
          {% set days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"] %}
          {{ months[now().month-1] }}.{{ now().day }}th. {{ days[now().weekday()] }}

# #sensors for HA updates
#   - platform: command_line
#     name: core_updates
#     command: 'curl http://supervisor/core/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"latest_version":.data.version_latest,"installed_version":.data.version,"update_available":.data.update_available}'''
#     value_template: '{{ value_json.update_available }}'
#     scan_interval: 600
#     json_attributes:
#       - update_available
#       - latest_version
#       - installed_version

#   - platform: command_line
#     name: supervisor_updates
#     command: 'curl http://supervisor/supervisor/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"latest_version":.data.version_latest,"installed_version":.data.version,"update_available":.data.update_available}'''
#     value_template: '{{ value_json.update_available }}'
#     scan_interval: 600
#     json_attributes:
#       - update_available
#       - latest_version
#       - installed_version

#   - platform: command_line
#     name: addons_updates
#     command: 'curl http://supervisor/addons -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"addons":[.data.addons[] | select(.update_available)]}'''
#     value_template: '{{ value_json.addons | length }}'
#     scan_interval: 600
#     unit_of_measurement: pending update(s)
#     json_attributes:
#       - addons

# binary_sensor:
#   - platform: template
#     sensors:
#       updater_core:
#         friendly_name: Core
#         device_class: problem
#         value_template: "{{ states('sensor.core_updates') }}"
#         attribute_templates:
#           installed_version: "{{ state_attr('sensor.core_updates', 'installed_version') }}"
#           latest_version: "{{ state_attr('sensor.core_updates', 'latest_version') }}"

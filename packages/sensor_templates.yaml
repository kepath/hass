---
template:
  - sensor:
      - unique_id: "binary_sensor_state_counts_template_generated"
        name: "binary_sensor_state_counts"
        state: "{{ expand('group.all_updates') | selectattr('state','eq', 'on') | list | count }}"   #"{{ 'off' if is_state('sensor.hacs', '0') else 'on' }}"
        attributes:
          climate_devices_on_count: >
            {{
              [(expand('group.all_climate') | map(attribute='entity_id') | select('is_state_attr', 'hvac_action', 'heat') | list | count),
              (expand('group.all_climate') | rejectattr('attributes.hvac_action', 'defined') | selectattr('state', 'eq', 'heat') | list | count),
              ( 0 if (states('sensor.air_to_water_heat_pump_out_water_temperature')|round < 45) else 1)] | sum
            }}
          door_sensors_triggered_count: "{{ expand('group.all_door_class_binary_sensors') | selectattr('state','eq', 'on') | list | count }}"
          door_sensors_unavailable_count: "{{ expand('group.all_door_class_binary_sensors') | selectattr('state','in', ['unavailable','unknown']) | list | count }}"
          lights_on_count: "{{ expand('group.all_lights') | selectattr('state','eq', 'on') | list | count }}"
          locks_unavailable_count: "{{ expand('group.all_locks') | selectattr('state','in', ['unavailable','unknown','jammed']) | list | count }}"
          locks_unlocked_count: "{{ expand('group.all_locks') | selectattr('state','eq', 'unlocked') | list | count }}"
          media_player_audio_on_count: "{{ expand('group.all_audio_class_media_player') | rejectattr('state','in', ['unavailable','unknown','standby','idle','off']) | list | count }}"
          media_player_audio_unavailable_count: "{{ expand('group.all_audio_class_media_player') | selectattr('state','in', ['unavailable','unknown']) | list | count }}"
          media_player_tv_and_remote_on_count: "{{ expand('group.all_remotes_and_tv_class_media_player') | rejectattr('state','in', ['unavailable','unknown','standby','idle','off']) | list | count }}"
          media_player_tv_and_remote_unavailable_count: "{{ expand('group.all_remotes_and_tv_class_media_player') | selectattr('state','in', ['unavailable','unknown']) | list | count }}"
          occupancy_persons_home_count: "{{ expand(states.person) | selectattr('state','eq','home') | map(attribute='entity_id') | list | count }}"
          occupancy_sensors_triggered_count: "{{ expand('group.all_occupancy_class_binary_sensors') | selectattr('state','eq', 'on') | list | count }}"
          occupancy_sensors_unavailable_count: "{{ expand('group.all_occupancy_class_binary_sensors') | selectattr('state','in', ['unavailable','unknown']) | list | count }}"
          plugs_off_count: "{{ expand('group.all_outlet_class_switch') | selectattr('state','eq', 'off') | list | count }}"
          safety_sensors_triggered_count: "{{ expand('group.all_safety_class_binary_sensors') | selectattr('state','eq', 'on') | list | count }}"
          safety_sensors_unavailable_count: "{{ expand('group.all_safety_class_binary_sensors') | selectattr('state','in', ['unavailable','unknown']) | list | count }}"
          zero_value: "{{ 0 | int }}"

      - unique_id: "integration_entity_attributes_template_generated"
        name: "Integration Entity Attributes"
        state: "0"
        attributes:
          domain_list: "{{ states | map(attribute='domain') | unique | list }}"
          device_class_list: "{{ states | rejectattr('attributes.device_class', 'undefined') | map(attribute='attributes.device_class') | unique | list }}"
          unit_of_measurement_list: "{{ states | rejectattr('attributes.unit_of_measurement', 'undefined') | map(attribute='attributes.unit_of_measurement') | unique | list }}"
          integrations_installed_list: "{{ states | map(attribute='entity_id') | map('device_attr', 'identifiers') | reject('none') | map('first') | select('defined') | map(attribute='0') | unique | list }}"
          area_id_list: >
            {%- for area in areas() | sort %}
              {{[
                area,
                area_name(area),
                area_name(area) | map('lower') | map('replace', ':', '') | map('replace', ',', '') | map('replace', ' ', '_') | join
              ]}}
            {%- endfor %}

      # Shelly Light Diagnotics
      - unique_id: "light_bathroom_shelly_diagnostics"
        name: "Bathroom Light Diagnostics"
        state: "{{ states('light.bathroom_light_light_1') }}"
        attributes:
          icon: "{{ state_attr('light.bathroom_light_light_1', 'icon') }}"
          connected: "{{ states('binary_sensor.bathroom_light_status') }}"
          switch_1: "{{ states('binary_sensor.bathroom_light_switch_1') }}"
          switch_2: "{{ states('binary_sensor.bathroom_light_switch_2') }}"
          bssid: "{{ states('sensor.bathroom_light_bssid') }}"
          essid: "{{ state_attr('device_tracker.shelly_bathroom_light_unifi', 'essid') }}"
          esphome_version: "{{ states('sensor.bathroom_light_esphome_version') }}"
          ip: "{{ states('sensor.bathroom_light_ip') }}"
          mac: "{{ states('sensor.bathroom_light_mac') }}"
          ap_mac: "{{ state_attr('device_tracker.shelly_bathroom_light_unifi', 'ap_mac') }}"
          rssi: "{{ states('sensor.bathroom_light_rssi') }}"
          ssid: "{{ states('sensor.bathroom_light_ssid') }}"
          temperature: "{{ states('sensor.bathroom_light_temperature') }}"
          uptime: "{{ states('sensor.bathroom_light_uptime') }}"
          firmware_installed: "{{ state_attr('update.bathroom_light_firmware', 'installed_version') }}"

      - unique_id: "light_bed-a_shelly_diagnostics"
        name: "Bed A Light Diagnostics"
        state: "{{ states('light.bed_a_light_light_1') }}"
        attributes:
          icon: "{{ state_attr('light.bed_a_light_light_1', 'icon') }}"
          connected: "{{ states('binary_sensor.bed_a_light_status') }}"
          switch_1: "{{ states('binary_sensor.bed_a_light_switch_1') }}"
          switch_2: "{{ states('binary_sensor.bed_a_light_switch_2') }}"
          bssid: "{{ states('sensor.bed_a_light_bssid') }}"
          essid: "{{ state_attr('device_tracker.shelly_bed_a_light_unifi', 'essid') }}"
          esphome_version: "{{ states('sensor.bed_a_light_esphome_version') }}"
          ip: "{{ states('sensor.bed_a_light_ip') }}"
          mac: "{{ states('sensor.bed_a_light_mac') }}"
          ap_mac: "{{ state_attr('device_tracker.shelly_bed_a_light_unifi', 'ap_mac') }}"
          rssi: "{{ states('sensor.bed_a_light_rssi') }}"
          ssid: "{{ states('sensor.bed_a_light_ssid') }}"
          temperature: "{{ states('sensor.bed_a_light_temperature') }}"
          uptime: "{{ states('sensor.bed_a_light_uptime') }}"
          firmware_installed: "{{ state_attr('update.bed_a_light_firmware', 'installed_version') }}"

      - unique_id: "light_bed-b_shelly_diagnostics"
        name: "Bed B Light Diagnostics"
        state: "{{ states('light.bed_b_light_light_1') }}"
        attributes:
          icon: "{{ state_attr('light.bed_b_light_light_1', 'icon') }}"
          connected: "{{ states('binary_sensor.bed_b_light_status') }}"
          switch_1: "{{ states('binary_sensor.bed_b_light_switch_1') }}"
          switch_2: "{{ states('binary_sensor.bed_b_light_switch_2') }}"
          bssid: "{{ states('sensor.bed_b_light_bssid') }}"
          essid: "{{ state_attr('device_tracker.shelly_bed_b_light_unifi', 'essid') }}"
          esphome_version: "{{ states('sensor.bed_b_light_esphome_version') }}"
          ip: "{{ states('sensor.bed_b_light_ip') }}"
          mac: "{{ states('sensor.bed_b_light_mac') }}"
          ap_mac: "{{ state_attr('device_tracker.shelly_bed_b_light_unifi', 'ap_mac') }}"
          rssi: "{{ states('sensor.bed_b_light_rssi') }}"
          ssid: "{{ states('sensor.bed_b_light_ssid') }}"
          temperature: "{{ states('sensor.bed_b_light_temperature') }}"
          uptime: "{{ states('sensor.bed_b_light_uptime') }}"
          firmware_installed: "{{ state_attr('update.bed_b_light_firmware', 'installed_version') }}"

      - unique_id: "light_bed-c_shelly_diagnostics"
        name: "Bed C Light Diagnostics"
        state: "{{ states('light.bed_c_light_1') }}"
        attributes:
          icon: "{{ state_attr('light.bed_c_light_1', 'icon') }}"
          connected: "{{ states('binary_sensor.bed_c_light_status') }}"
          switch_1: "{{ states('binary_sensor.bed_c_light_switch_1') }}"
          switch_2: "{{ states('binary_sensor.bed_c_light_switch_2') }}"
          bssid: "{{ states('sensor.bed_c_light_bssid') }}"
          essid: "{{ state_attr('device_tracker.shelly_bed_c_light_unifi', 'essid') }}"
          esphome_version: "{{ states('sensor.bed_c_light_esphome_version') }}"
          ip: "{{ states('sensor.bed_c_light_ip') }}"
          mac: "{{ states('sensor.bed_c_light_mac') }}"
          ap_mac: "{{ state_attr('device_tracker.shelly_bed_c_light_unifi', 'ap_mac') }}"
          rssi: "{{ states('sensor.bed_c_light_rssi') }}"
          ssid: "{{ states('sensor.bed_c_light_ssid') }}"
          temperature: "{{ states('sensor.bed_c_light_temperature') }}"
          uptime: "{{ states('sensor.bed_c_light_uptime') }}"
          firmware_installed: "{{ state_attr('update.bed_c_light_firmware', 'installed_version') }}"

      - unique_id: "light_bed-e_shelly_diagnostics"
        name: "Bed E Light Diagnostics"
        state: "{{ states('light.bed_e_light_light_1') }}"
        attributes:
          icon: "{{ state_attr('light.bed_e_light_light_1', 'icon') }}"
          connected: "{{ states('binary_sensor.bed_e_light_status') }}"
          switch_1: "{{ states('binary_sensor.bed_e_light_switch_1') }}"
          switch_2: "{{ states('binary_sensor.bed_e_light_switch_2') }}"
          bssid: "{{ states('sensor.bed_e_light_bssid') }}"
          essid: "{{ state_attr('device_tracker.shelly_bed_e_light_unifi', 'essid') }}"
          esphome_version: "{{ states('sensor.bed_e_light_esphome_version') }}"
          ip: "{{ states('sensor.bed_e_light_ip') }}"
          mac: "{{ states('sensor.bed_e_light_mac') }}"
          ap_mac: "{{ state_attr('device_tracker.shelly_bed_e_light_unifi', 'ap_mac') }}"
          rssi: "{{ states('sensor.bed_e_light_rssi') }}"
          ssid: "{{ states('sensor.bed_e_light_ssid') }}"
          temperature: "{{ states('sensor.bed_e_light_temperature') }}"
          uptime: "{{ states('sensor.bed_e_light_uptime') }}"
          firmware_installed: "{{ state_attr('update.bed_e_light_firmware', 'installed_version') }}"

      - unique_id: "light_ensuite_shelly_diagnostics"
        name: "En-suite Light Diagnostics"
        state: "{{ states('light.ensuite_light_light_1') }}"
        attributes:
          icon: "{{ state_attr('light.ensuite_light_light_1', 'icon') }}"
          connected: "{{ states('binary_sensor.ensuite_light_status') }}"
          switch_1: "{{ states('binary_sensor.ensuite_light_switch_1') }}"
          switch_2: "{{ states('binary_sensor.ensuite_light_switch_2') }}"
          bssid: "{{ states('sensor.ensuite_light_bssid') }}"
          essid: "{{ state_attr('device_tracker.shelly_ensuite_light_unifi', 'essid') }}"
          esphome_version: "{{ states('sensor.ensuite_light_esphome_version') }}"
          ip: "{{ states('sensor.ensuite_light_ip') }}"
          mac: "{{ states('sensor.ensuite_light_mac') }}"
          ap_mac: "{{ state_attr('device_tracker.shelly_ensuite_light_unifi', 'ap_mac') }}"
          rssi: "{{ states('sensor.ensuite_light_rssi') }}"
          ssid: "{{ states('sensor.ensuite_light_ssid') }}"
          temperature: "{{ states('sensor.ensuite_light_temperature') }}"
          uptime: "{{ states('sensor.ensuite_light_uptime') }}"
          firmware_installed: "{{ state_attr('update.ensuite_light_firmware', 'installed_version') }}"

      - unique_id: "light_hallway-bottom_shelly_diagnostics"
        name: "Bottom Hallway Light Diagnostics"
        state: "{{ states('light.hallway_bottom_light_1') }}"
        attributes:
          icon: "{{ state_attr('light.hallway_bottom_light_1', 'icon') }}"
          connected: "{{ states('binary_sensor.hallway_bottom_light_status') }}"
          switch_1: "{{ states('binary_sensor.hallway_bottom_light_switch_1') }}"
          switch_2: "{{ states('binary_sensor.hallway_bottom_light_switch_2') }}"
          bssid: "{{ states('sensor.hallway_bottom_light_bssid') }}"
          essid: "{{ state_attr('device_tracker.shelly_hallway_bottom_light_unifi', 'essid') }}"
          esphome_version: "{{ states('sensor.hallway_bottom_light_esphome_version') }}"
          ip: "{{ states('sensor.hallway_bottom_light_ip') }}"
          mac: "{{ states('sensor.hallway_bottom_light_mac') }}"
          ap_mac: "{{ state_attr('device_tracker.shelly_hallway_bottom_light_unifi', 'ap_mac') }}"
          rssi: "{{ states('sensor.hallway_bottom_light_rssi') }}"
          ssid: "{{ states('sensor.hallway_bottom_light_ssid') }}"
          temperature: "{{ states('sensor.hallway_bottom_light_temperature') }}"
          uptime: "{{ states('sensor.hallway_bottom_light_uptime') }}"
          firmware_installed: "{{ state_attr('update.hallway_bottom_light_firmware', 'installed_version') }}"

      - unique_id: "light_hallway-middle_shelly_diagnostics"
        name: "Middle Hallway Light Diagnostics"
        state: "{{ states('light.middle_hallway_light_light_1') }}"
        attributes:
          icon: "{{ state_attr('light.middle_hallway_light_light_1', 'icon') }}"
          connected: "{{ states('binary_sensor.hallway_middle_light_status') }}"
          switch_1: "{{ states('binary_sensor.hallway_middle_light_switch_1') }}"
          switch_2: "{{ states('binary_sensor.hallway_middle_light_switch_2') }}"
          bssid: "{{ states('sensor.hallway_middle_light_bssid') }}"
          essid: "{{ state_attr('device_tracker.shelly_hallway_middle_light_unifi', 'essid') }}"
          esphome_version: "{{ states('sensor.hallway_middle_light_esphome_version') }}"
          ip: "{{ states('sensor.hallway_middle_light_ip') }}"
          mac: "{{ states('sensor.hallway_middle_light_mac') }}"
          ap_mac: "{{ state_attr('device_tracker.shelly_hallway_middle_light_unifi', 'ap_mac') }}"
          rssi: "{{ states('sensor.hallway_middle_light_rssi') }}"
          ssid: "{{ states('sensor.hallway_middle_light_ssid') }}"
          temperature: "{{ states('sensor.hallway_middle_light_temperature') }}"
          uptime: "{{ states('sensor.hallway_middle_light_uptime') }}"
          firmware_installed: "{{ state_attr('update.hallway_middle_light_firmware', 'installed_version') }}"

      - unique_id: "light_kitchen-main_shelly_diagnostics"
        name: "Kitchen Main Light Diagnostics"
        state: "{{ states('light.kitchen_main_light_light_1') }}"
        attributes:
          icon: "{{ state_attr('light.kitchen_main_light_light_1', 'icon') }}"
          connected: "{{ states('binary_sensor.kitchen_main_light_status') }}"
          switch_1: "{{ states('binary_sensor.kitchen_main_light_switch_1') }}"
          switch_2: "{{ states('binary_sensor.kitchen_main_light_switch_2') }}"
          bssid: "{{ states('sensor.kitchen_main_light_bssid') }}"
          essid: "{{ state_attr('device_tracker.shelly_kitchen_main_light_unifi', 'essid') }}"
          esphome_version: "{{ states('sensor.kitchen_main_light_esphome_version') }}"
          ip: "{{ states('sensor.kitchen_main_light_ip') }}"
          mac: "{{ states('sensor.kitchen_main_light_mac') }}"
          ap_mac: "{{ state_attr('device_tracker.shelly_kitchen_main_light_unifi', 'ap_mac') }}"
          rssi: "{{ states('sensor.kitchen_main_light_rssi') }}"
          ssid: "{{ states('sensor.kitchen_main_light_ssid') }}"
          temperature: "{{ states('sensor.kitchen_main_light_temperature') }}"
          uptime: "{{ states('sensor.kitchen_main_light_uptime') }}"
          firmware_installed: "{{ state_attr('update.kitchen_main_light_firmware', 'installed_version') }}"

      - unique_id: "light_kitchen-utility_shelly_diagnostics"
        name: "Kitchen Utility Light Diagnostics"
        state: "{{ states('light.kitchen_utility_light_light_1') }}"
        attributes:
          icon: "{{ state_attr('light.kitchen_utility_light_light_1', 'icon') }}"
          connected: "{{ states('binary_sensor.kitchen_utility_light_status') }}"
          switch_1: "{{ states('binary_sensor.kitchen_utility_light_switch_1') }}"
          switch_2: "{{ states('binary_sensor.kitchen_utility_light_switch_2') }}"
          bssid: "{{ states('sensor.kitchen_utility_light_bssid') }}"
          essid: "{{ state_attr('device_tracker.shelly_kitchen_utility_light_unifi', 'essid') }}"
          esphome_version: "{{ states('sensor.kitchen_utility_light_esphome_version') }}"
          ip: "{{ states('sensor.kitchen_utility_light_ip') }}"
          mac: "{{ states('sensor.kitchen_utility_light_mac') }}"
          ap_mac: "{{ state_attr('device_tracker.shelly_kitchen_utility_light_unifi', 'ap_mac') }}"
          rssi: "{{ states('sensor.kitchen_utility_light_rssi') }}"
          ssid: "{{ states('sensor.kitchen_utility_light_ssid') }}"
          temperature: "{{ states('sensor.kitchen_utility_light_temperature') }}"
          uptime: "{{ states('sensor.kitchen_utility_light_uptime') }}"
          firmware_installed: "{{ state_attr('update.kitchen_utility_light_firmware', 'installed_version') }}"

      - unique_id: "light_lounge_shelly_diagnostics"
        name: "Lounge Light Diagnostics"
        state: "{{ states('light.lounge_light_light_1') }}"
        attributes:
          icon: "{{ state_attr('light.lounge_light_light_1', 'icon') }}"
          connected: "{{ states('binary_sensor.lounge_light_status') }}"
          switch_1: "{{ states('binary_sensor.lounge_light_switch_1') }}"
          switch_2: "{{ states('binary_sensor.lounge_light_switch_2') }}"
          bssid: "{{ states('sensor.lounge_light_bssid') }}"
          essid: "{{ state_attr('device_tracker.shelly_lounge_light_unifi', 'essid') }}"
          esphome_version: "{{ states('sensor.lounge_light_esphome_version') }}"
          ip: "{{ states('sensor.lounge_light_ip') }}"
          mac: "{{ states('sensor.lounge_light_mac') }}"
          ap_mac: "{{ state_attr('device_tracker.shelly_lounge_light_unifi', 'ap_mac') }}"
          rssi: "{{ states('sensor.lounge_light_rssi') }}"
          ssid: "{{ states('sensor.lounge_light_ssid') }}"
          temperature: "{{ states('sensor.lounge_light_temperature') }}"
          uptime: "{{ states('sensor.lounge_light_uptime') }}"
          firmware_installed: "{{ state_attr('update.lounge_light_firmware', 'installed_version') }}"

      - unique_id: "light_study_shelly_diagnostics"
        name: "Study Light Diagnostics"
        state: "{{ states('light.study_light_light_1') }}"
        attributes:
          icon: "{{ state_attr('light.study_light_light_1', 'icon') }}"
          connected: "{{ states('binary_sensor.study_light_status') }}"
          switch_1: "{{ states('binary_sensor.study_light_switch_1') }}"
          switch_2: "{{ states('binary_sensor.study_light_switch_2') }}"
          bssid: "{{ states('sensor.study_light_bssid') }}"
          essid: "{{ state_attr('device_tracker.shelly_study_light_unifi', 'essid') }}"
          esphome_version: "{{ states('sensor.study_light_esphome_version') }}"
          ip: "{{ states('sensor.study_light_ip') }}"
          mac: "{{ states('sensor.study_light_mac') }}"
          ap_mac: "{{ state_attr('device_tracker.shelly_study_light_unifi', 'ap_mac') }}"
          rssi: "{{ states('sensor.study_light_rssi') }}"
          ssid: "{{ states('sensor.study_light_ssid') }}"
          temperature: "{{ states('sensor.study_light_temperature') }}"
          uptime: "{{ states('sensor.study_light_uptime') }}"
          firmware_installed: "{{ state_attr('update.study_light_firmware', 'installed_version') }}"

      # - unique_id: "addon_45df7312_zigbee2mqtt_diagnostics"
      #   name: "Addon Zigbee2MQTT Diagnostics"
      #   state: "{{ states('binary_sensor.zigbee2mqtt_running') }}"
      #   attributes:
      #     cpu_percent: "{{ states('sensor.zigbee2mqtt_cpu_percent') }}"
      #     memory_percent: "{{ states('sensor.zigbee2mqtt_memory_percent') }}"
      #     installed_version: "{{ state_attr('update.zigbee2mqtt_update', 'installed_version') }}"
      #     latest_version: "{{ state_attr('update.zigbee2mqtt_update', 'latest_version') }}"
      - unique_id: "addon_a0d7b954_adguard_diagnostics"
        name: "Addon AdGuard Home Diagnostics"
        state: "{{ states('binary_sensor.adguard_home_running') }}"
        attributes:
          cpu_percent: "{{ states('sensor.adguard_home_cpu_percent') }}"
          memory_percent: "{{ states('sensor.adguard_home_memory_percent') }}"
          installed_version: "{{ state_attr('update.adguard_home_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.adguard_home_update', 'latest_version') }}"
      - unique_id: "addon_a0d7b954_emqx_diagnostics"
        name: "Addon EMQX Diagnostics"
        state: "{{ states('binary_sensor.emqx_running') }}"
        attributes:
          cpu_percent: "{{ states('sensor.emqx_cpu_percent') }}"
          memory_percent: "{{ states('sensor.emqx_memory_percent') }}"
          installed_version: "{{ state_attr('update.emqx_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.emqx_update', 'latest_version') }}"
      - unique_id: "addon_5c53de3b_esphome_diagnostics"
        name: "Addon ESPHome Diagnostics"
        state: "{{ states('binary_sensor.esphome_running') }}"
        attributes:
          cpu_percent: "{{ states('sensor.esphome_cpu_percent') }}"
          memory_percent: "{{ states('sensor.esphome_memory_percent') }}"
          installed_version: "{{ state_attr('update.esphome_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.esphome_update', 'latest_version') }}"
      - unique_id: "addon_a0d7b954_grafana_diagnostics"
        name: "Addon Grafana Diagnostics"
        state: "{{ states('binary_sensor.grafana_running') }}"
        attributes:
          cpu_percent: "{{ states('sensor.grafana_cpu_percent') }}"
          memory_percent: "{{ states('sensor.grafana_memory_percent') }}"
          installed_version: "{{ state_attr('update.grafana_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.grafana_update', 'latest_version') }}"
      - unique_id: "addon_core_home_assistant_core_diagnostics"
        name: "Addon Home Assistant Core Diagnostics"
        state: "on"
        attributes:
          cpu_percent: "{{ states('sensor.home_assistant_core_cpu_percent') }}"
          memory_percent: "{{ states('sensor.home_assistant_core_memory_percent') }}"
          installed_version: "{{ state_attr('update.home_assistant_core_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.home_assistant_core_update', 'latest_version') }}"
      - unique_id: "addon_core_home_assistant_supervisor_diagnostics"
        name: "Addon Home Assistant Supervisor Diagnostics"
        state: "on"
        attributes:
          cpu_percent: "{{ states('sensor.home_assistant_supervisor_cpu_percent') }}"
          memory_percent: "{{ states('sensor.home_assistant_supervisor_memory_percent') }}"
          installed_version: "{{ state_attr('update.home_assistant_supervisor_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.home_assistant_supervisor_update', 'latest_version') }}"
      - unique_id: "addon_a0d7b954_influxdb_diagnostics"
        name: "Addon InfluxDB Diagnostics"
        state: "{{ states('binary_sensor.influxdb_running') }}"
        attributes:
          cpu_percent: "{{ states('sensor.influxdb_cpu_percent') }}"
          memory_percent: "{{ states('sensor.influxdb_memory_percent') }}"
          installed_version: "{{ state_attr('update.influxdb_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.influxdb_update', 'latest_version') }}"
      - unique_id: "addon_core_mariadb_diagnostics"
        name: "Addon MariaDB Diagnostics"
        state: "{{ states('binary_sensor.mariadb_running') }}"
        attributes:
          cpu_percent: "{{ states('sensor.mariadb_cpu_percent') }}"
          memory_percent: "{{ states('sensor.mariadb_memory_percent') }}"
          installed_version: "{{ state_attr('update.mariadb_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.mariadb_update', 'latest_version') }}"
      - unique_id: "addon_a0d7b954_network_ups_tools_diagnostics"
        name: "Addon Network UPS Tools Diagnostics"
        state: "{{ states('binary_sensor.network_ups_tools_running') }}"
        attributes:
          cpu_percent: "{{ states('sensor.network_ups_tools_cpu_percent') }}"
          memory_percent: "{{ states('sensor.network_ups_tools_memory_percent') }}"
          installed_version: "{{ state_attr('update.network_ups_tools_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.network_ups_tools_update', 'latest_version') }}"
      - unique_id: "addon_a0d7b954_nodered_diagnostics"
        name: "Addon NodeRed Diagnostics"
        state: "{{ states('binary_sensor.node_red_running') }}"
        attributes:
          cpu_percent: "{{ states('sensor.node_red_cpu_percent') }}"
          memory_percent: "{{ states('sensor.node_red_memory_percent') }}"
          installed_version: "{{ state_attr('update.node_red_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.node_red_update', 'latest_version') }}"
      - unique_id: "addon_a0d7b954_phpmyadmin_diagnostics"
        name: "Addon PHPmyAdmin Diagnostics"
        state: "{{ states('binary_sensor.phpmyadmin_running') }}"
        attributes:
          cpu_percent: "{{ states('sensor.phpmyadmin_cpu_percent') }}"
          memory_percent: "{{ states('sensor.phpmyadmin_memory_percent') }}"
          installed_version: "{{ state_attr('update.phpmyadmin_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.phpmyadmin_update', 'latest_version') }}"
      - unique_id: "addon_a0d7b954_plex_media_server_diagnostics"
        name: "Addon Plex Media Server Diagnostics"
        state: "{{ states('binary_sensor.plex_media_server_running') }}"
        attributes:
          cpu_percent: "{{ states('sensor.plex_media_server_cpu_percent') }}"
          memory_percent: "{{ states('sensor.plex_media_server_memory_percent') }}"
          installed_version: "{{ state_attr('update.plex_media_server_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.plex_media_server_update', 'latest_version') }}"
      - unique_id: "addon_db21ed7f_portainer_diagnostics"
        name: "Addon Portainer Diagnostics"
        state: "{{ states('binary_sensor.portainer_running') }}"
        attributes:
          cpu_percent: "{{ states('sensor.portainer_cpu_percent') }}"
          memory_percent: "{{ states('sensor.portainer_memory_percent') }}"
          installed_version: "{{ state_attr('update.portainer_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.portainer_update', 'latest_version') }}"
      - unique_id: "addon_db21ed7f_scrutiny_fa_diagnostics"
        name: "Addon Scrutiny Full Access Diagnostics"
        state: "{{ states('binary_sensor.scrutiny_full_access_running') }}"
        attributes:
          cpu_percent: "{{ states('sensor.scrutiny_full_access_cpu_percent') }}"
          memory_percent: "{{ states('sensor.scrutiny_full_access_memory_percent') }}"
          installed_version: "{{ state_attr('update.scrutiny_full_access_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.scrutiny_full_access_update', 'latest_version') }}"
      - unique_id: "addon_a0d7b954_tautulli_diagnostics"
        name: "Addon Tautulli Diagnostics"
        state: "{{ states('binary_sensor.tautulli_running') }}"
        attributes:
          cpu_percent: "{{ states('sensor.tautulli_cpu_percent') }}"
          memory_percent: "{{ states('sensor.tautulli_memory_percent') }}"
          installed_version: "{{ state_attr('update.tautulli_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.tautulli_update', 'latest_version') }}"
      - unique_id: "addon_a0d7b954_uptime_kuma_diagnostics"
        name: "Addon Uptime Kuma Diagnostics"
        state: "{{ states('binary_sensor.uptime_kuma_running') }}"
        attributes:
          cpu_percent: "{{ states('sensor.uptime_kuma_cpu_percent') }}"
          memory_percent: "{{ states('sensor.uptime_kuma_memory_percent') }}"
          installed_version: "{{ state_attr('update.uptime_kuma_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.uptime_kuma_update', 'latest_version') }}"
      - unique_id: "addon_edge_vscode_remote_diagnostics"
        name: "Addon VSCode Remote Diagnostics"
        state: "{{ states('binary_sensor.vscode_remote_running') }}"
        attributes:
          cpu_percent: "{{ states('sensor.vscode_remote_cpu_percent') }}"
          memory_percent: "{{ states('sensor.vscode_remote_memory_percent') }}"
          installed_version: "{{ state_attr('update.vscode_remote_update', 'installed_version') }}"
          latest_version: "{{ state_attr('update.vscode_remote_update', 'latest_version') }}"

      - unique_id: "floorplan_dates_template_generated"
        name: "Floorplan dates template generated"
        icon: >
          {% from 'easy_time.jinja' import clock_icon %}
          {{ clock_icon() }}
        state: >
          {% from 'easy_time.jinja' import clock %}
          {{ clock() }}
        attributes:
          front_door_last_opened: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('input_datetime.front_door_last_opened') }}
          front_door_last_locked: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('input_datetime.front_door_last_locked') }}
          back_door_last_opened: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('input_datetime.back_door_last_opened') }}
          patio_door1_last_opened: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('input_datetime.patio_door1_last_opened') }}
          patio_door2_last_opened: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('input_datetime.patio_door2_last_opened') }}
          garage_door_last_opened: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('input_datetime.garage_door_last_opened') }}
          loft_ladder_last_opened: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('input_datetime.loft_ladder_last_opened') }}
          nest_protect_bottom_floor_last_activity: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('input_datetime.nest_protect_bottom_floor_last_activity') }}
          nest_protect_middle_floor_last_activity: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('input_datetime.nest_protect_middle_floor_last_activity') }}
          nest_protect_top_floor_last_activity: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('input_datetime.nest_protect_top_floor_last_activity') }}
          motion_sensor_front_door_stairs_last_activity: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('input_datetime.motion_sensor_front_door_stairs_last_activity') }}
          motion_sensor_bed_e_last_activity: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('input_datetime.motion_sensor_bed_e_last_activity') }}
          back_g3_flex_last_motion_detected: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('sensor.back_g3_flex_last_motion_detected') }}
          bed_c_g3_instant_last_motion_detected: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('sensor.bed_c_g3_instant_last_motion_detected') }}
          bottom_hallway_g3_instant_last_motion_detected: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('sensor.bottom_hallway_g3_instant_last_motion_detected') }}
          front_g3_flex_last_motion_detected: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('sensor.front_g3_flex_last_motion_detected') }}
          kitchen_g3_instant_last_motion_detected: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('sensor.kitchen_g3_instant_last_motion_detected') }}
          middle_hallway_g3_flex_last_motion_detected: >
            {% from 'easy_time.jinja' import easy_relative_time %}
            {{ easy_relative_time('sensor.middle_hallway_g3_flex_last_motion_detected') }}
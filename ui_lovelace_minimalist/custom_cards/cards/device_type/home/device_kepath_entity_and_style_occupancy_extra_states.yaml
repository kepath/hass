---
device_kepath_entity_and_style_occupancy_extra_states:
  variables:
    var_kepath_device_entity_and_style_occupancy_state:
      use_themes: true
      not_triggered_state:
        icon: "mdi:motion-sensor-off"
        icon_color: "green"
        background_color: "green"
      triggered_and_home_state:
        icon: "mdi:human-greeting"
        icon_color: "blue"
        background_color: "blue"
      triggered_and_away_state:
        icon: "mdi:motion-sensor"
        icon_color: "red"
        background_color: "red"

  state:
    - value: "not_triggered"
      icon: >
        [[[
          var backupIcon =  "mdi:circle-outline";
          var returnedIcon;
          if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.not_triggered_state?.icon !== 'undefined') {
            if (variables?.var_kepath_device_entity_and_style_occupancy_state?.not_triggered_state?.icon.includes('mdi:') ||
                variables?.var_kepath_device_entity_and_style_occupancy_state?.not_triggered_state?.icon.includes('phu:') ||
                variables?.var_kepath_device_entity_and_style_occupancy_state?.not_triggered_state?.icon.includes('si:')) {
              returnedIcon = variables?.var_kepath_device_entity_and_style_occupancy_state?.not_triggered_state?.icon;
            }
          }
          if (typeof returnedIcon !== 'undefined') {
            //hass.callService('system_log', 'write', {level:'warning',message:'returnedIcon: ' + returnedIcon});
            return returnedIcon;
          } else {
            return backupIcon;
          }
        ]]]
      styles:
        icon:
          - color: >
              [[[
                var returnedColorDefault = "yellow";
                var returnedColor;
                var useThemesDefault = true;
                var useThemes;
                const colorOptions = ['grey', 'red', 'green', 'yellow', 'blue', 'purple', 'pink', 'amber', 'theme'];
                if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes !== 'undefined') {
                  if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes === 'boolean') {
                    useThemes = variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes;
                  } else {
                    useThemes = useThemesDefault;
                  }
                } else {
                  useThemes = useThemesDefault;
                }
                //returnedColor = if_variable_undefined_use_default(variables?.var_kepath_device_entity_and_style_occupancy_state?.not_triggered_state?.icon_color,returnedColorDefault)
                if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.not_triggered_state?.icon_color !== 'undefined') {
                  returnedColor = variables?.var_kepath_device_entity_and_style_occupancy_state?.not_triggered_state?.icon_color;
                } else {
                  returnedColor = returnedColorDefault;
                }
                if (useThemes) {
                  for (let i = 0; i < colorOptions.length; i++) {
                    if (returnedColor.includes(colorOptions[i])){
                      returnedColor = "rgba(var(--color-" + returnedColor + "), 1)";
                    }
                  }
                }
                //hass.callService('system_log', 'write', {level:'warning',message:'returnedColor: ' + returnedColor});

                return returnedColor;
              ]]]
        img_cell:
          - background-color: >
              [[[
                var returnedColorDefault = "yellow";
                var returnedColor;
                var useThemesDefault = true;
                var useThemes;
                const colorOptions = ['grey', 'red', 'green', 'yellow', 'blue', 'purple', 'pink', 'amber', 'theme'];
                if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes !== 'undefined') {
                  if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes === 'boolean') {
                    useThemes = variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes;
                  } else {
                    useThemes = useThemesDefault;
                  }
                } else {
                  useThemes = useThemesDefault;
                }
                if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.not_triggered_state?.background_color !== 'undefined') {
                  returnedColor = variables?.var_kepath_device_entity_and_style_occupancy_state?.not_triggered_state?.background_color;
                } else {
                  returnedColor = returnedColorDefault;
                }
                if (useThemes) {
                  for (let i = 0; i < colorOptions.length; i++) {
                    if (returnedColor.includes(colorOptions[i])){
                      returnedColor = "rgba(var(--color-" + returnedColor + "), 0.2)";
                    }
                  }
                }
                //hass.callService('system_log', 'write', {level:'warning',message:'returnedColor: ' + returnedColor});

                return returnedColor;
              ]]]
    - value: "triggered_home"
      icon: >
        [[[
          var backupIcon =  "mdi:circle-outline";
          var returnedIcon;
          if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_home_state?.icon !== 'undefined') {
            if (variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_home_state?.icon.includes('mdi:') ||
                variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_home_state?.icon.includes('phu:') ||
                variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_home_state?.icon.includes('si:')) {
              returnedIcon = variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_home_state?.icon;
            }
          }
          if (typeof returnedIcon !== 'undefined') {
            //hass.callService('system_log', 'write', {level:'warning',message:'returnedIcon: ' + returnedIcon});
            return returnedIcon;
          } else {
            return backupIcon;
          }
        ]]]
      styles:
        icon:
          - color: >
              [[[
                var returnedColorDefault = "yellow";
                var returnedColor;
                var useThemesDefault = true;
                var useThemes;
                const colorOptions = ['grey', 'red', 'green', 'yellow', 'blue', 'purple', 'pink', 'amber', 'theme'];
                if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes !== 'undefined') {
                  if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes === 'boolean') {
                    useThemes = variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes;
                  } else {
                    useThemes = useThemesDefault;
                  }
                } else {
                  useThemes = useThemesDefault;
                }
                //returnedColor = if_variable_undefined_use_default(variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_home_state?.icon_color,returnedColorDefault)
                if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_home_state?.icon_color !== 'undefined') {
                  returnedColor = variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_home_state?.icon_color;
                } else {
                  returnedColor = returnedColorDefault;
                }
                if (useThemes) {
                  for (let i = 0; i < colorOptions.length; i++) {
                    if (returnedColor.includes(colorOptions[i])){
                      returnedColor = "rgba(var(--color-" + returnedColor + "), 1)";
                    }
                  }
                }
                //hass.callService('system_log', 'write', {level:'warning',message:'returnedColor: ' + returnedColor});

                return returnedColor;
              ]]]
        img_cell:
          - background-color: >
              [[[
                var returnedColorDefault = "yellow";
                var returnedColor;
                var useThemesDefault = true;
                var useThemes;
                const colorOptions = ['grey', 'red', 'green', 'yellow', 'blue', 'purple', 'pink', 'amber', 'theme'];
                if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes !== 'undefined') {
                  if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes === 'boolean') {
                    useThemes = variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes;
                  } else {
                    useThemes = useThemesDefault;
                  }
                } else {
                  useThemes = useThemesDefault;
                }
                if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_home_state?.background_color !== 'undefined') {
                  returnedColor = variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_home_state?.background_color;
                } else {
                  returnedColor = returnedColorDefault;
                }
                if (useThemes) {
                  for (let i = 0; i < colorOptions.length; i++) {
                    if (returnedColor.includes(colorOptions[i])){
                      returnedColor = "rgba(var(--color-" + returnedColor + "), 0.2)";
                    }
                  }
                }
                //hass.callService('system_log', 'write', {level:'warning',message:'returnedColor: ' + returnedColor});

                return returnedColor;
              ]]]
    - value: "triggered_away"
      icon: >
        [[[
          var backupIcon =  "mdi:help-circle";
          var returnedIcon;
          if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_away_state?.icon !== 'undefined') {
            if (variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_away_state?.icon.includes('mdi:') ||
                variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_away_state?.icon.includes('phu:') ||
                variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_away_state?.icon.includes('si:')) {
              returnedIcon = variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_away_state?.icon;
            }
          }
          if (typeof returnedIcon !== 'undefined') {
            //hass.callService('system_log', 'write', {level:'warning',message:'returnedIcon: ' + returnedIcon});
            return returnedIcon;
          } else {
            return backupIcon;
          }
        ]]]
      styles:
        icon:
          - color: >
              [[[
                var returnedColorDefault = "yellow";
                var returnedColor;
                var useThemesDefault = true;
                var useThemes;
                const colorOptions = ['grey', 'red', 'green', 'yellow', 'blue', 'purple', 'pink', 'amber', 'theme'];
                if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes !== 'undefined') {
                  if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes === 'boolean') {
                    useThemes = variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes;
                  } else {
                    useThemes = useThemesDefault;
                  }
                } else {
                  useThemes = useThemesDefault;
                }
                //returnedColor = if_variable_undefined_use_default(variables?.var_kepath_device_entity_and_style_occupancy_state?.warning_state?.icon_color,returnedColorDefault)
                if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_away_state?.icon_color !== 'undefined') {
                  returnedColor = variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_away_state?.icon_color;
                } else {
                  returnedColor = returnedColorDefault;
                }
                if (useThemes) {
                  for (let i = 0; i < colorOptions.length; i++) {
                    if (returnedColor.includes(colorOptions[i])){
                      returnedColor = "rgba(var(--color-" + returnedColor + "), 1)";
                    }
                  }
                }
                //hass.callService('system_log', 'write', {level:'warning',message:'returnedColor: ' + returnedColor});

                return returnedColor;
              ]]]
        img_cell:
          - background-color: >
              [[[
                var returnedColorDefault = "yellow";
                var returnedColor;
                var useThemesDefault = true;
                var useThemes;
                const colorOptions = ['grey', 'red', 'green', 'yellow', 'blue', 'purple', 'pink', 'amber', 'theme'];
                if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes !== 'undefined') {
                  if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes === 'boolean') {
                    useThemes = variables?.var_kepath_device_entity_and_style_occupancy_state?.use_themes;
                  } else {
                    useThemes = useThemesDefault;
                  }
                } else {
                  useThemes = useThemesDefault;
                }
                if (typeof variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_away_state?.background_color !== 'undefined') {
                  returnedColor = variables?.var_kepath_device_entity_and_style_occupancy_state?.triggered_and_away_state?.background_color;
                } else {
                  returnedColor = returnedColorDefault;
                }
                if (useThemes) {
                  for (let i = 0; i < colorOptions.length; i++) {
                    if (returnedColor.includes(colorOptions[i])){
                      returnedColor = "rgba(var(--color-" + returnedColor + "), 0.2)";
                    }
                  }
                }
                //hass.callService('system_log', 'write', {level:'warning',message:'returnedColor: ' + returnedColor});

                return returnedColor;
              ]]]

---
# group:
#   all_zones:
#     name: "list of all zones"
#     entities: >
#       {%- set zones = ['zone'] -%}
#       {%- for zone in zones -%}
#         {%- for item in states[zone] %}
#           - "{{ item.entity_id }}"
#         {%- endfor -%}
#       {%- endfor %}

# unavailable {{ expand(states) | selectattr('state', 'eq', 'unavailable') | map(attribute='entity_id') | list | count }}
# unknown {{ expand(states) | selectattr('state', 'eq', 'unknown') | map(attribute='entity_id') | list | count }}
# lights on {{ expand(states.light) | selectattr('state','eq', 'on') | map(attribute='entity_id') | list | count }}


custom_card_kepath_person_info:
  template:
    - "icon_info_bg"
    - "ulm_translation_engine"
    - "ulm_custom_card_kepath_person_language_variables"
    - "custom_popup_kepath_person"
  variables:
    ulm_card_kepath_person_zones: ""
    ulm_address: ""
    ulm_address_locality: ""
    ulm_card_kepath_person_wifi_tracker: ""
    ulm_card_kepath_person_gps_tracker: ""
    ulm_card_kepath_person_driving_entity: ""
    ulm_card_kepath_person_commute_entity: ""
  triggers_update: "all"
  show_label: false
  show_name: false 
  label: ""
  name: "[[[ return states[variables.ulm_card_kepath_person_entity].attributes.friendly_name ]]]"
  entity: "[[[ return variables.ulm_card_kepath_person_entity; ]]]"
  icon: > 
    [[[
      if (states[variables.ulm_card_kepath_person_entity].attributes.icon) {
        return states[variables.ulm_card_kepath_person_entity].attributes.icon;
      } else {
        return "mdi:face-man";
      }
    ]]]
  styles:
    grid:
      - grid-template-areas: "'i' 'i' 'l'"
      - grid-template-rows: "min-content min-content"
    icon:
      - color: >
          [[[
            var person_location = states[variables.ulm_card_kepath_person_entity].state.replace(" ", "_").toLowerCase();
            if (person_location == 'home') {
              return "rgba(var(--color-blue),1)";
            } else if ((person_location == 'away') || (person_location == 'not_home')) {
              return "rgba(var(--color-red),1)";
            } else if ((person_location == 'unknown') || (person_location == 'unavailable')) {
              return "rgba(var(--color-theme),1)";
            } else {
              return "rgba(var(--color-yellow),1)";
            }
          ]]]
      - width: "20px"
      - place-self: "left"
    img_cell:
      - background-color: >
          [[[
            var person_location = states[variables.ulm_card_kepath_person_entity].state.replace(" ", "_").toLowerCase();
            if (person_location == 'home') {
              return "rgba(var(--color-blue),0.2)";
            } else if ((person_location == 'away') || (person_location == 'not_home')) {
              return "rgba(var(--color-red),0.2)";
            } else if ((person_location == 'unknown') || (person_location == 'unavailable')) {
              return "rgba(var(--color-theme),0.2)";
            } else {
              return "rgba(var(--color-yellow),0.2)";
            }
          ]]]
    custom_fields:
      notification:
        - border-radius: "50%"
        - position: "absolute"
        - left: "38px"
        - top: "8px"
        - height: "16px"
        - width: "16px"
        - border: "2px solid var(--card-background-color)"
        - font-size: "12px"
        - line-height: "14px"
        - background-color: >
            [[[
              var person_location = states[variables.ulm_card_kepath_person_entity].state.replace(" ", "_").toLowerCase();
              var color = "rgba(var(--color-red),1)";
              if (states[variables.ulm_card_kepath_person_driving_entity]?.state == "on") {
                var commute = states[variables.ulm_card_kepath_person_commute_entity]?.state;
                if (!isNaN(commute)) {
                  color = "rgba(var(--color-green),1)";
                  if (commute > 60) {
                    color = "rgba(var(--color-red),1)";
                  }            
                  if (commute > 30) {
                    color = "rgba(var(--color-yellow),1)";
                  }
                }
              } else {
                if ((person_location == 'unknown') || (person_location == 'unavailable')) {
                  color = "rgba(var(--color-grey),1)";
                }
              }
              return color;
            ]]]
      battery:
        - border-radius: "50%"
        - position: "absolute"
        - left: "38px"
        - top: "38px"
        - height: "16px"
        - width: "16px"
        - border: "2px solid var(--card-background-color)"
        - font-size: "12px"
        - line-height: "14px"
        - background-color: "var(--card-background-color)"

  custom_fields:
    notification: >
      [[[
        var zones = variables.ulm_card_kepath_person_zones;
        var person_location = states[variables.ulm_card_kepath_person_entity].state.replace(" ", "_").toLowerCase();
        var returnIcon = false;
        var color = "rgba(var(--card-background-color),1)";
        if (states[variables.ulm_card_kepath_person_driving_entity]?.state == "on") {
          var commute = states[variables.ulm_card_kepath_person_commute_entity]?.state;
          if (!isNaN(commute)) {
            var icon = "mdi:car";
            returnIcon = true;
          }
        } else {
          if ((person_location == 'unknown') || (person_location == 'unavailable')) {
            var icon = "mdi:account-alert";
            returnIcon = true;
          } else {
            if ((person_location == 'home') || (person_location == 'away') || (person_location == 'not_home')) {
              return
            } else {
              var icon = "mdi:account-question";
              returnIcon = true;
              for (const item of zones){
                if (person_location == states[item]?.attributes?.friendly_name.replace(" ", "_").toLowerCase()){
                  if (states[item].attributes.icon != null) {
                    icon = states[item].attributes.icon;
                  }
                }
              } 
            }         
          }          
        }

        if (returnIcon) {
          return '<ha-icon icon="' + icon + '" style="width: 10px; height: 10px; color: var(--card-background-color);"></ha-icon>';
        } else {
          return
        }
      ]]]
    battery: >
      [[[
        var icon = "mdi:battery-unknown";
        var color = "var(--color-grey)";
        if (states[variables.ulm_card_kepath_person_gps_tracker]?.state) {
          var battery = states[variables.ulm_card_kepath_person_gps_tracker]?.attributes?.battery;
          if (!isNaN(battery)) {
            var charging = states[variables.ulm_card_kepath_person_gps_tracker]?.attributes?.battery_status?.toLowerCase() == "charging";
            var iconBase = charging ? "mdi:battery-charging" : "mdi:battery";
            var roundedBattery = Math.ceil(battery / 10) * 10;
            if (roundedBattery == 0) {
              var icon = "mdi:battery-outline";
            } else {
              var icon = roundedBattery == 100 ? iconBase : `${iconBase}-${roundedBattery}`;
            }
            if (battery > 50) {
              color = "rgba(var(--color-green),1)";
            } else if (battery > 25) {
              color = "rgba(var(--color-yellow),1)";
            } else if (battery > 10) {
              color = "rgba(var(--color-red),1)";
            } else if (battery > 0) {
              color = "rgba(var(--color-grey),1)";
            }
          } else {
            var icon = "mdi:battery-alert";
          }
        }
        return '<ha-icon icon="' + icon + '" style="width: 12px; height: 12px; color: ' + color + '; margin: 0 2px 0 0"></ha-icon>';
      ]]]


custom_popup_kepath_person:
  tap_action:
    action: "fire-dom-event"
    browser_mod:
      service: "browser_mod.popup"
      data:
        title: "[[[ return states[variables.ulm_card_kepath_person_entity].attributes.friendly_name ]]]"
        style:
          $: >
            [[[
              if (hass.themes.theme.includes("desktop")){
                var dialog = `
                  .mdc-dialog__surface{
                    border-radius: var(--border-radius) !important;
                  }
                `;
              } else{
                var dialog = "";
              }
              return `
                *{
                  --secondary-background-color: none !important;
                }
                ${dialog}
              `;
            ]]]
          hui-vertical-stack-card:
            $: >
              button-card {
                align-self: center;
                padding: 0.2em 0 2.3em 0;
              }
              hui-entities-card{
                padding: 0.8em 1.4em;
              }
            $hui-entities-card$: >
              ha-card{
                box-shadow: none;
              }
            $hui-history-graph-card$: >
              .content {
                padding: 0 2.4em !important;
              }
              ha-card{
                box-shadow: none;
              }
            $hui-glance-card$: >
              ha-card{
                box-shadow: none;
              }
            $hui-map-card:
              $: >
                ha-icon-button {
                  color: rgba(var(--color-blue),1);
                }
              $ha-map:
                $: >
                  .leaflet-control-attribution {
                    display: none;
                  }
                  .leaflet-touch .leaflet-control-layers, .leaflet-touch .leaflet-bar {
                    border: 2px solid rgba(var(--color-blue),0.4) !important;
                  }
                  .leaflet-bar a {
                    background-color: rgba(var(--color-blue),0.2) !important;
                    color: rgba(var(--color-blue),1) !important;
                  }
                  .leaflet-bar a:first-child {
                    border-bottom: 2px solid rgba(var(--color-blue),0.4) !important;
                  }
                  .leaflet-pane.leaflet-tile-pane {
                    filter: contrast(95%);
                  }
        content:
          type: "vertical-stack"
          cards:
            - type: "entities"
              entities:
                - entity: "[[[ return variables.ulm_card_kepath_person_entity; ]]]"
                  secondary_info: "last-changed"
            - type: "history-graph"
              entities:
                - entity: "[[[ return variables.ulm_card_kepath_person_entity; ]]]"
            - type: "glance"
              show_state: false
              entities:
                - entity: "[[[ return variables.ulm_card_kepath_person_wifi_tracker; ]]]"
                  name: "WiFi"
                  icon: "mdi:wifi"
                  style: &state >
                    state-badge{
                      color: {{ 'rgba(var(--color-blue),1)' if is_state(config.entity, 'home') }};
                      filter: {{ 'opacity(100%)' if is_state(config.entity, 'home') else 'opacity(40%)'}};
                    }
                - entity: "[[[ return variables.ulm_card_kepath_person_gps_tracker; ]]]"
                  name: "GPS"
                  icon: "mdi:map-marker"
                  style: *state
            - type: "custom:button-card"
              template:
                - "find_my_phone_button_kepath"
              entity: "[[[ return variables.ulm_card_kepath_person_findmy_script; ]]]"
            - type: "map"
              aspect_ratio: "12x10"
              default_zoom: 16
              entities: "[[[ return [variables.ulm_card_kepath_person_gps_tracker]; ]]]"

find_my_phone_button_kepath:
  template:
    - "ulm_custom_card_kepath_person_language_variables"
  tap_action:
    action: "toggle"
  icon: "mdi:volume-high"
  name: "[[[ return variables.ulm_custom_card_kepath_person_findmy; ]]]"
  size: "1.4em"
  styles:
    icon:
      - color: "rgba(var(--color-blue),1)"
    name:
      - font-size: "1.06em"
      - letterspacing: "0.015em"
    grid:
      - grid-template-areas: "'i n'"
      - grid-column-gap: "0.3em"
    card:
      - color: "rgba(var(--color-blue),1)"
      - background: "rgba(var(--color-blue),0.2"
      - border-radius: "0.6em"
      - padding: "1em 1.4em"
      - width: "max-content"
      - font-size: "1.06em"
      - font-weight: "500"
      - letter-spacing: "0.015em"
      - box-shadow: "none"
custom_card_kepath_binary_sensor_count:
  template:
    - "ulm_translation_engine"
    - "icon_info_bg"
    - "custom_domains_action"
    # - "custom_domains_action_navigate"
  icon: "mdi:lightbulb"
  show_icon: true
  show_label: false
  show_name: false
  variables:
    ulm_card_kepath_binary_sensor_count_entity: "[[[ return entity.entity_id]]]"
    ulm_card_kepath_binary_sensor_count_popup:
      type: "[[[ return variables?.ulm_card_kepath_binary_sensor_count_popup?.type ? variables.ulm_card_kepath_binary_sensor_count_popup.type : 'navigate'; ]]]"
      page: "[[[ return variables?.ulm_card_kepath_binary_sensor_count_popup?.page ? variables.ulm_card_kepath_binary_sensor_count_popup.page : '/'; ]]]"
    ulm_card_kepath_binary_sensor_count_amount:
      attribute: "[[[ return variables?.ulm_card_kepath_binary_sensor_count_amount?.attribute ? variables.ulm_card_kepath_binary_sensor_count_amount.attribute : ''; ]]]"
      show_notification: "[[[ return variables?.ulm_card_kepath_binary_sensor_count_amount?.show_notification ? variables.ulm_card_kepath_binary_sensor_count_amount.show_notification : false; ]]]"
    ulm_card_kepath_binary_sensor_count_total:
      attribute: "[[[ return variables?.ulm_card_kepath_binary_sensor_count_total?.attribute ? variables.ulm_card_kepath_binary_sensor_count_total.attribute : ''; ]]]"
      show_notification: "[[[ return variables?.ulm_card_kepath_binary_sensor_count_total?.show_notification ? variables.ulm_card_kepath_binary_sensor_count_total.show_notification : false; ]]]"
    ulm_card_kepath_binary_sensor_count_warning:
      attribute: "[[[ return variables?.ulm_card_kepath_binary_sensor_count_warning?.attribute ? variables.ulm_card_kepath_binary_sensor_count_warning.attribute : ''; ]]]"
      show_notification: "[[[ return variables?.ulm_card_kepath_binary_sensor_count_warning?.show_notification ? variables.ulm_card_kepath_binary_sensor_count_warning.show_notification : false; ]]]"
  # tap_action:
  #   action: navigate
  #   navigation_path: "[[[ return variables?.ulm_card_kepath_binary_sensor_count_nav ? variables?.ulm_card_kepath_binary_sensor_count_nav : more-info; ]]]"
  # hold_action:
  #   action: more-info
  styles:
    grid:
      - grid-template-areas: "'i' 'i' 'l'"
      - grid-template-rows: "min-content min-content"
      - justify-items: "center"
    icon:
      - width: "20px"
    card:
      - padding: "5px"
      - background-color: "var(--card-background-color)"

    custom_fields:
      warning:
        - border-radius: "50%"
        - position: "absolute"
        - left: "30px"
        - top: "2px"
        - height: "16px"
        - width: "16px"
        - border: "2px solid var(--card-background-color)"
        - font-size: "12px"
        - line-height: "14px"
        - background-color: "var(--card-background-color)"
      total_or_amount:
        - border-radius: "50%"
        - position: "absolute"
        - left: "30px"
        - top: "32px"
        - height: "16px"
        - width: "16px"
        - border: "2px solid var(--card-background-color)"
        - font-size: "12px"
        - line-height: "14px"
        - background-color: "var(--card-background-color)"

  custom_fields:
    warning: >
      [[[
        var returnIcon = false;

        if (variables.ulm_card_kepath_binary_sensor_count_warning.show_notification) {
          var count = states[entity.entity_id].attributes[variables.ulm_card_kepath_binary_sensor_count_warning.attribute];
          var templates = states[entity.entity_id].attributes[variables.ulm_card_kepath_binary_sensor_count_warning.templates];
        } else {
          var count = 0;
          var templates = "";
        }

        if (!isNaN(count) && count != 0 && count !== undefined){
          if (count > 9) {
            var count = "9-plus"
          }
          var returnIcon = true;
          var icon = "mdi:numeric-0-circle".replace("0",count)
        }

        if (returnIcon) {
          return '<ha-icon icon="' + icon + '" style="width: 12px; height: 12px; color: rgba(var(--color-red),1);"></ha-icon>';
        } else {
          return
        }
      ]]]
    total_or_amount: >
      [[[
        var show_count_amount = variables.ulm_card_kepath_binary_sensor_count_amount.show_notification;
        var show_count_total = variables.ulm_card_kepath_binary_sensor_count_total.show_notification;
        var returnIcon = false;

        if (show_count_amount) {
          var count = states[entity.entity_id].attributes[variables.ulm_card_kepath_binary_sensor_count_amount.attribute];
          var templates = states[entity.entity_id].attributes[variables.ulm_card_kepath_binary_sensor_count_amount.templates];
        } else {
          if (show_count_total) {
            var count = states[entity.entity_id].attributes[variables.ulm_card_kepath_binary_sensor_count_total.attribute];
            var templates = states[entity.entity_id].attributes[variables.ulm_card_kepath_binary_sensor_count_total.templates];
          } else {
            var count = 0;
            var templates = "";
          }
        }

        if (!isNaN(count) && count != 0 && count !== undefined){
          if (count > 9) {
            var count = "9-plus"
          }
          var returnIcon = true;
          var icon = "mdi:numeric-0-circle".replace("0",count)
        }

        if (returnIcon) {
          return '<ha-icon icon="' + icon + '" style="width: 12px; height: 12px; color: rgba(var(--color-red),1);"></ha-icon>';
        } else {
          return
        }
      ]]]

# service: browser_mod.navigate
# data:
#   path: "[[[ return variables.ulm_card_kepath_binary_sensor_count_popup.page ]]]"
custom_domains_action: |
  {% set action_type = variables.ulm_card_kepath_binary_sensor_count_popup.type %}
  
  # card:
  #   type: "custom:button-card"
  template:
    - {{ action_type }}
  #   [[[
  #     let templates = [];
  #     templates.push("custom_domains_action_navigate");
  #     return templates;
  #   ]]]
  # [[[
  #   if (variables.ulm_card_kepath_binary_sensor_count_popup.type == 'navigate') {
  #     let templates = "custom_domains_action_navigate";
  #   } else {
  #     let templates = "custom_domains_action_popup";
  #   }
  #   return templates;
  # ]]]
  # variables:
  #   ulm_card_kepath_binary_sensor_count_popup:
  #     type: "[[[ return variables.ulm_card_kepath_binary_sensor_count_popup.type ]]]"
  #     page: "[[[ return variables.ulm_card_kepath_binary_sensor_count_popup.page ]]]"      
  # hold_action:
  #   action: fire-dom-event
  #   browser_mod:
  #     service: browser_mod.more_info
  #     data:
  #       entity: "[[[ return variables.ulm_card_kepath_binary_sensor_count_entity ]]]"

custom_domains_action_navigate:
  # card:
  #   type: "custom:button-card"
  tap_action:
    action: "fire-dom-event"
    browser_mod: 
      service: "browser_mod.navigate"
      data:
        path: "[[[ return variables.ulm_card_kepath_binary_sensor_count_popup.page ]]]"

custom_domains_action_popup:
  # card:
  #   type: "custom:button-card"
  tap_action:
    action: "fire-dom-event"
    browser_mod: 
      service: "browser_mod.navigate"
      data:
        path: "[[[ return variables.ulm_card_kepath_binary_sensor_count_popup.page ]]]"


# service: 
# data:
#   title: "[[[ return variables.ulm_card_kepath_binary_sensor_count_popup.type ]]]"
#   style:
#     $: >
#       [[[
#         if (hass.themes.theme.includes("desktop")){
#           var dialog = `
#             .mdc-dialog__surface{
#               border-radius: var(--border-radius) !important;
#             }
#           `;
#         } else{
#           var dialog = "";
#         }
#         return `
#           *{
#             --secondary-background-color: none !important;
#           }
#           ${dialog}
#         `;
#       ]]]
#     hui-vertical-stack-card:
#       $: >
#         button-card {
#           align-self: center;
#           padding: 0.2em 0 2.3em 0;
#         }
#         hui-entities-card{
#           padding: 0.8em 1.4em;
#         }
#       $hui-entities-card$: >
#         ha-card{
#           box-shadow: none;
#         }
#       $hui-history-graph-card$: >
#         .content {
#           padding: 0 2.4em !important;
#         }
#         ha-card{
#           box-shadow: none;
#         }
#       $hui-glance-card$: >
#         ha-card{
#           box-shadow: none;
#         }
#       $hui-map-card:
#         $: >
#           ha-icon-button {
#             color: rgba(var(--color-blue),1);
#           }
#         $ha-map:
#           $: >
#             .leaflet-control-attribution {
#               display: none;
#             }
#             .leaflet-touch .leaflet-control-layers, .leaflet-touch .leaflet-bar {
#               border: 2px solid rgba(var(--color-blue),0.4) !important;
#             }
#             .leaflet-bar a {
#               background-color: rgba(var(--color-blue),0.2) !important;
#               color: rgba(var(--color-blue),1) !important;
#             }
#             .leaflet-bar a:first-child {
#               border-bottom: 2px solid rgba(var(--color-blue),0.4) !important;
#             }
#             .leaflet-pane.leaflet-tile-pane {
#               filter: contrast(95%);
#             }
#   content:
#     type: "vertical-stack"
#     cards: 
#       - type: "entities"
#         entities:
#           - entity: "[[[ return variables.ulm_card_kepath_binary_sensor_count_entity; ]]]"
#             secondary_info: "last-changed"



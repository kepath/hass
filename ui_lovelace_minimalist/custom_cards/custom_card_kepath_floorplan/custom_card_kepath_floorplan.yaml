---
card_kepath_floorplan_binary_item_light:
  show_icon: true
  show_label: false
  show_name: false
  icon: "mdi:lightbulb-outline"
  styles:
    icon:
      - width: "18px"
      - height: "18px"
      - line-height: "0"
      - color: "rgba(221, 221, 221, 1.0)"
    img_cell:
      - border-radius: "50%"
      - height: "32px"
      - width: "32px"
      - background-color: "rgba(130, 130, 130, 0.3)"
      - backdrop-filter: "blur(8px)"
    card:
      - background-color: "rgba(100, 100, 100, 0.0)"
  state:
    - value: "on"
      icon: "mdi:lightbulb-on"
      styles:
        icon:
          - color: "rgba(var(--color-yellow),1)"
    - template:
      value: "[[[ return (entity?.state == 'unavailable' || entity?.state == 'unknown' ? true : false) ]]]"
      styles:
        icon:
          - color: "rgba(var(--color-red), 0.6)"
        img_cell:
          - background-color: "rgba(130, 130, 130, 0.5)"
      tap_action:
        action: "more-info"
  tap_action:
    action: "toggle"
  hold_action:
    action: "more-info"


card_kepath_floorplan_binary_item_plug:
  show_icon: true
  show_label: false
  show_name: false
  icon: "mdi:power-plug"
  styles:
    icon:
      - width: "18px"
      - height: "18px"
      - line-height: "0"
      - color: "rgba(var(--color-green),1)"
    img_cell:
      - border-radius: "50%"
      - height: "32px"
      - width: "32px"
      - background-color: "rgba(130, 130, 130, 0.3)"
      - backdrop-filter: "blur(8px)"
    card:
      - background-color: "rgba(100, 100, 100, 0.0)"
  state:

    - operator: "template"
      value: >
        [[[
          var isPowered = false;
          var powerValue;
          if (variables?.ulm_card_kepath_floorplan_item_power_usage_denotes_on) {
            if (variables?.ulm_card_kepath_floorplan_item_binary_device_power) {
              powerValue = states[variables.ulm_card_kepath_floorplan_item_binary_device_power].state
              if (!isNaN(powerValue) && powerValue !== undefined){
                isPowered = true;
              }
            }
          }
          return isPowered;
        ]]]
      styles:
        icon:
          - color: >
              [[[
                var powerValue = 0;
                var color = "rgba(var(--color-blue),1)";
                if (variables?.ulm_card_kepath_floorplan_item_binary_device_power) {
                  powerValue = states[variables.ulm_card_kepath_floorplan_item_binary_device_power].state
                  if (!isNaN(powerValue) && powerValue !== undefined){
                    powerValue = Math.floor(powerValue);
                  }
                }
                if (powerValue > 10) {
                  color = "rgba(var(--color-green),1)";
                }
                return color;
              ]]]

    - operator: "template"
      value: >
        [[[
          var doesOffMeanStopped = false;
          if (variables?.ulm_card_kepath_floorplan_item_binary_device_off_is_stopped) {
            if (typeof variables.ulm_card_kepath_floorplan_item_binary_device_off_is_stopped === "boolean") {
              doesOffMeanStopped = variables.ulm_card_kepath_floorplan_item_binary_device_off_is_stopped;
            }
          }
          return doesOffMeanStopped;
        ]]]
      styles:
        icon:
          - color: >
              [[[
                var color = "rgba(var(--color-blue),1)";
                if (states[entity.entity_id]?.state) {
                  if (states[entity.entity_id].state == "on") {
                    color = "rgba(var(--color-green),1)";
                  }
                }
                return color;
              ]]]

    - operator: "template"
      value: >
        [[[
          var isOff = false;
          if (states[entity.entity_id]?.state) {
            if (states[entity.entity_id].state == "off") {
              isOff = true;
            }
          }
          return isOff;
        ]]]
      icon: "mdi:power-plug-outline"
      styles:
        icon:
          - color: "rgba(221, 221, 221, 1.0)"

    - operator: "template"
      value: "[[[ return (states[entity.entity_id]?.state == 'unavailable' || states[entity.entity_id]?.state == 'unknown' ? true : false) ]]]"
      styles:
        icon:
          - color: "rgba(var(--color-red), 0.6)"
        img_cell:
          - background-color: "rgba(130, 130, 130, 0.5)"

  tap_action:
    action: "more-info"
    entity: >
      [[[
        var moreInfoEntity = entity.entity_id;
        if (variables?.ulm_card_kepath_floorplan_item_binary_device_more_info) {
          moreInfoEntity = variables?.ulm_card_kepath_floorplan_item_binary_device_more_info;
        }
        return moreInfoEntity;
      ]]]
  hold_action:
    action: "toggle"


card_kepath_floorplan_binary_item_heater:
  show_icon: true
  show_label: false
  show_name: false
  icon: "mdi:radiator-disabled"
  styles:
    icon:
      - width: "18px"
      - height: "18px"
      - line-height: "0"
      - color: "rgba(221, 221, 221, 1.0)"
    img_cell:
      - border-radius: "50%"
      - height: "32px"
      - width: "32px"
      - background-color: "rgba(130, 130, 130, 0.3)"
      - backdrop-filter: "blur(8px)"
    card:
      - background-color: "rgba(100, 100, 100, 0.0)"
  state:
    - value: "on"
      icon: "mdi:radiator"
      styles:
        icon:
          - color: "rgba(var(--color-yellow),1)"
    - template:
      value: "[[[ return (entity?.state == 'unavailable' || entity?.state == 'unknown' ? true : false) ]]]"
      styles:
        icon:
          - color: "rgba(var(--color-red), 0.6)"
        img_cell:
          - background-color: "rgba(130, 130, 130, 0.5)"
      tap_action:
        action: "more-info"
  tap_action:
    action: "toggle"
  hold_action:
    action: "more-info"


card_kepath_floorplan_camera:
  show_icon: true
  show_label: true
  show_name: false
  icon: "[[[ return variables.ulm_card_kepath_floorplan_camera_icon ]]]"
  label: >
    [[[
      var relativeDate = "unknown";
      if(variables?.ulm_card_kepath_floorplan_camera_last_activity_entity) {
        if(variables?.ulm_card_kepath_floorplan_camera_last_activity_attribute) {
          relativeDate = states[variables?.ulm_card_kepath_floorplan_camera_last_activity_entity].attributes[variables?.ulm_card_kepath_floorplan_camera_last_activity_attribute] ? states[variables.ulm_card_kepath_floorplan_camera_last_activity_entity].attributes[variables.ulm_card_kepath_floorplan_camera_last_activity_attribute] : "unknown"
        } else {
          relativeDate = states[variables?.ulm_card_kepath_floorplan_camera_last_activity_entity].state ? states[variables.ulm_card_kepath_floorplan_camera_last_activity_entity].state : "unknown"
        }
      }
      return relativeDate
    ]]]
  styles:
    icon:
      - width: "18px"
      - height: "18px"
      - line-height: "0"
      - color: "rgba(221, 221, 221, 1.0)"
    img_cell:
      - border-radius: "50%"
      - height: "30px"
      - width: "30px"
      - background-color: "rgba(130, 130, 130, 0.3)"
      - backdrop-filter: "blur(8px)"
      - border: "2px solid rgba(130, 130, 130, 0.0)"
      - border-color: >
          [[[
            var borderColor = ""
            borderColor += variables?.ulm_card_kepath_floorplan_camera_view_borders.includes("top") ? "rgba(221, 221, 221, 1.0) " : "rgba(130, 130, 130, 0.0) "
            borderColor += variables?.ulm_card_kepath_floorplan_camera_view_borders.includes("right") ? "rgba(221, 221, 221, 1.0) " : "rgba(130, 130, 130, 0.0) "
            borderColor += variables?.ulm_card_kepath_floorplan_camera_view_borders.includes("bottom") ? "rgba(221, 221, 221, 1.0) " : "rgba(130, 130, 130, 0.0) "
            borderColor += variables?.ulm_card_kepath_floorplan_camera_view_borders.includes("left") ? "rgba(221, 221, 221, 1.0) " : "rgba(130, 130, 130, 0.0) "

            return borderColor
          ]]]
    card:
      - background-color: "rgba(100, 100, 100, 0.0)"
    label:
      - justify-self: "start"
      - align-self: "start"
      - font-weight: "bold"
      - font-size: "12px"
      - margin: "0 12px 0 12px"
      - text-overflow: "ellipsis"
      - overflow: "hidden"
      - color: "rgba(221, 221, 221, 0.4)"
  state:
    - operator: "template"
      value: "[[[ return (states[variables.ulm_card_kepath_floorplan_camera_motion_sensor].state == 'on') ]]]"
      styles:
        icon:
          - color: "rgba(var(--color-green),1)"
        img_cell:
          - background-color: "rgba(var(--color-green), 0.2)"
          - border-color: >
              [[[
                var borderColor = ""
                borderColor += variables?.ulm_card_kepath_floorplan_camera_view_borders.includes("top") ? "rgba(var(--color-green),1) " : "rgba(var(--color-green), 0.2) "
                borderColor += variables?.ulm_card_kepath_floorplan_camera_view_borders.includes("right") ? "rgba(var(--color-green),1) " : "rgba(var(--color-green), 0.2) "
                borderColor += variables?.ulm_card_kepath_floorplan_camera_view_borders.includes("bottom") ? "rgba(var(--color-green),1) " : "rgba(var(--color-green), 0.2) "
                borderColor += variables?.ulm_card_kepath_floorplan_camera_view_borders.includes("left") ? "rgba(var(--color-green),1) " : "rgba(var(--color-green), 0.2)"

                return borderColor
              ]]]
    - operator: "template"
      value: "[[[ return (variables?.ulm_card_kepath_floorplan_camera_motion_sensor == 'unavailable' || variables?.ulm_card_kepath_floorplan_camera_motion_sensor == 'unknown' ? true : false) ]]]"
      styles:
        icon:
          - color: "rgba(var(--color-red), 0.6)"
        img_cell:
          - background-color: "rgba(130, 130, 130, 0.5)"
      tap_action:
        action: "more-info"


card_kepath_floorplan_door:
  show_icon: true
  show_label: true
  show_name: false
  icon: >
    [[[
      var doorIcon = "mdi:door";
      if (variables?.ulm_card_kepath_floorplan_door_closed_icon) {
        doorIcon = variables.ulm_card_kepath_floorplan_door_closed_icon;
      }
      return doorIcon;
    ]]]
  label: >
    [[[
      var relativeDate = "unknown";
      if(variables?.ulm_card_kepath_floorplan_door_last_opened_entity) {
        if(variables?.ulm_card_kepath_floorplan_door_last_opened_attribute) {
          relativeDate = states[variables?.ulm_card_kepath_floorplan_door_last_opened_entity].attributes[variables?.ulm_card_kepath_floorplan_door_last_opened_attribute] ? states[variables.ulm_card_kepath_floorplan_door_last_opened_entity].attributes[variables.ulm_card_kepath_floorplan_door_last_opened_attribute] : "unknown"
        } else {
          relativeDate = states[variables?.ulm_card_kepath_floorplan_door_last_opened_entity].state ? states[variables.ulm_card_kepath_floorplan_door_last_opened_entity].state : "unknown"
        }
      }
      return relativeDate
    ]]]
  styles:
    icon:
      - width: "18px"
      - height: "18px"
      - line-height: "0"
      - color: "rgba(221, 221, 221, 1.0)"
    img_cell:
      - border-radius: "50%"
      - height: "32px"
      - width: "32px"
      - background-color: "rgba(130, 130, 130, 0.3)"
      - backdrop-filter: "blur(8px)"
    card:
      - background-color: "rgba(100, 100, 100, 0.0)"
    label:
      - justify-self: "start"
      - align-self: "start"
      - font-weight: "bold"
      - font-size: "12px"
      - margin: "0 12px 0 12px"
      - text-overflow: "ellipsis"
      - overflow: "hidden"
      - color: "rgba(221, 221, 221, 0.4)"
  tap_action:
    action: "more-info"
  state:
    - value: "on"
      icon: >
        [[[
          var doorIcon = "mdi:door-open";
          if (variables?.ulm_card_kepath_floorplan_door_open_icon) {
            doorIcon = variables.ulm_card_kepath_floorplan_door_open_icon;
          }
          return doorIcon;
        ]]]
      styles:
        icon:
          - color: "rgba(var(--color-green),1)"
        img_cell:
          - background-color: "rgba(var(--color-green), 0.2)"
    - operator: "template"
      value: "[[[ return (entity?.state == 'unavailable' || entity?.state == 'unknown' ? true : false) ]]]"
      styles:
        icon:
          - color: "rgba(var(--color-red), 0.6)"
        img_cell:
          - background-color: "rgba(130, 130, 130, 0.5)"


card_kepath_floorplan_nest_protect:
  show_icon: true
  show_label: true
  show_name: false
  icon: "mdi:smoke-detector-variant"
  label: >
    [[[
      var relativeDate = "unknown";
      if(variables?.ulm_card_kepath_floorplan_nest_protect_last_activity_entity) {
        if(variables?.ulm_card_kepath_floorplan_nest_protect_last_activity_attribute) {
          relativeDate = states[variables?.ulm_card_kepath_floorplan_nest_protect_last_activity_entity].attributes[variables?.ulm_card_kepath_floorplan_nest_protect_last_activity_attribute] ? states[variables.ulm_card_kepath_floorplan_nest_protect_last_activity_entity].attributes[variables.ulm_card_kepath_floorplan_nest_protect_last_activity_attribute] : "unknown"
        } else {
          relativeDate = states[variables?.ulm_card_kepath_floorplan_nest_protect_last_activity_entity].state ? states[variables.ulm_card_kepath_floorplan_nest_protect_last_activity_entity].state : "unknown"
        }
      }
      return relativeDate
    ]]]
  styles:
    icon:
      - color: "rgba(221, 221, 221, 1.0)"
    img_cell:
      - border-radius: "50%"
      - width: "75%"
      - height: "75%"
      - max-width: "none"
      - max-height: "none"
      - position: "absolute"
      - left: "50%"
      - top: "50%"
      - transform: "translate(-50%,-50%)"
      - margin-top: "25%"
      - margin-left: "-25%"
      - background-color: "rgba(130, 130, 130, 0.3)"
    card:
      - border-radius: "20px"
      - box-shadow: "var(--box-shadow)"
      - padding: "5px"
      - backdrop-filter: "blur(8px)"
      - background-color: "rgba(100, 100, 100, 0.0)"
    label:
      - justify-self: "start"
      - align-self: "start"
      - font-weight: "bold"
      - font-size: "12px"
      - margin: "0 12px 0 12px"
      - text-overflow: "ellipsis"
      - overflow: "hidden"
      - color: "rgba(221, 221, 221, 0.4)"
    grid:
      - grid-template-areas: "'l l l l' 'i i i CO' 'i i i heat' 'i i i smoke'"
      - grid-template-columns: "1fr 1fr 1fr 1fr"
      - grid-template-rows: "1fr 1fr 1fr 1fr"
      - justify-items: "center"
  tap_action:
    action: "more-info"
  state:
    - value: "on"
      styles:
        icon:
          - color: "rgba(var(--color-green),1)"
        img_cell:
          - background-color: "rgba(var(--color-green), 0.2)"
    - operator: "template"
      value: "[[[ return (entity?.state == 'unavailable' || entity?.state == 'unknown' ? true : false) ]]]"
      styles:
        icon:
          - color: "rgba(var(--color-red), 0.6)"
        img_cell:
          - background-color: "rgba(130, 130, 130, 0.5)"
  custom_fields:
    CO:
      card:
        type: "custom:button-card"
        icon: "mdi:molecule-co"
        styles:
          icon:
            - width: "14px"
            - height: "14px"
            - line-height: "0"
            - color: "var(--card-background-color)"
          img_cell:
            - border-radius: "50%"
            - background-color: "rgba(var(--color-blue),1)"
            - height: "16px"
            - width: "16px"
          card:
            - height: "100%"
            - box-shadow: "none"
            - padding: "0px"
            - border-radius: "50%"
            - margin: "1px"
        state:
          - operator: "template"
            value: "[[[ return states[variables.ulm_card_kepath_floorplan_nest_protect_co_status].state ]]]"
            styles:
              img_cell:
                - background-color: "rgba(100, 100, 100, 0.0)"
              card:
                - background-color: "rgba(100, 100, 100, 0.0)"
              icon:
                - color: "rgba(130, 130, 130, 0.3)"
          - operator: "template"
            value: "[[[ return (variables?.ulm_card_kepath_floorplan_nest_protect_co_status == 'unavailable' || variables?.ulm_card_kepath_floorplan_nest_protect_co_status == 'unknown' ? true : false) ]]]"
            styles:
              icon:
                - color: "rgba(var(--color-red), 0.6)"
              img_cell:
                - background-color: "rgba(130, 130, 130, 0.5)"
        tap_action:
          action: "more-info"
    heat:
      card:
        type: "custom:button-card"
        show_icon: true
        show_label: false
        show_name: false
        icon: "mdi:thermometer"
        styles:
          icon:
            - width: "14px"
            - height: "14px"
            - line-height: "0"
            - color: "var(--card-background-color)"
          img_cell:
            - border-radius: "50%"
            - background-color: "rgba(var(--color-yellow),1)"
            - height: "16px"
            - width: "16px"
          card:
            - height: "100%"
            - box-shadow: "none"
            - padding: "0px"
            - border-radius: "50%"
            - margin: "1px"
        state:
          - operator: "template"
            value: "[[[ return states[variables.ulm_card_kepath_floorplan_nest_protect_heat_status].state ]]]"
            styles:
              img_cell:
                - background-color: "rgba(100, 100, 100, 0.0)"
              card:
                - background-color: "rgba(100, 100, 100, 0.0)"
              icon:
                - color: "rgba(130, 130, 130, 0.3)"
          - operator: "template"
            value: "[[[ return (variables?.ulm_card_kepath_floorplan_nest_protect_heat_status == 'unavailable' || variables?.ulm_card_kepath_floorplan_nest_protect_heat_status == 'unknown' ? true : false) ]]]"
            styles:
              icon:
                - color: "rgba(var(--color-red), 0.6)"
              img_cell:
                - background-color: "rgba(130, 130, 130, 0.5)"
        tap_action:
          action: "more-info"
    smoke:
      card:
        type: "custom:button-card"
        show_icon: true
        show_label: false
        show_name: false
        icon: "mdi:fire"
        styles:
          icon:
            - width: "14px"
            - height: "14px"
            - line-height: "0"
            - color: "var(--card-background-color)"
          img_cell:
            - border-radius: "50%"
            - background-color: "rgba(var(--color-red),1)"
            - height: "16px"
            - width: "16px"
          card:
            - height: "100%"
            - box-shadow: "none"
            - padding: "0px"
            - border-radius: "50%"
            - margin: "1px"
        state:
          - operator: "template"
            value: "[[[ return states[variables.ulm_card_kepath_floorplan_nest_protect_smoke_status].state ]]]"
            styles:
              img_cell:
                - background-color: "rgba(100, 100, 100, 0.0)"
              card:
                - background-color: "rgba(100, 100, 100, 0.0)"
              icon:
                - color: "rgba(130, 130, 130, 0.3)"
          - operator: "template"
            value: "[[[ return (variables?.ulm_card_kepath_floorplan_nest_protect_smoke_status == 'unavailable' || variables?.ulm_card_kepath_floorplan_nest_protect_smoke_status == 'unknown' ? true : false) ]]]"
            styles:
              icon:
                - color: "rgba(var(--color-red), 0.6)"
              img_cell:
                - background-color: "rgba(130, 130, 130, 0.5)"
        tap_action:
          action: "more-info"
          # card:
          #   type: "custom:button-card"
          #   template: "card_kepath_floorplan_nest_protect_alert"
          #   variables:
          #     card_kepath_floorplan_nest_protect_alert_icon: "mdi:fire"
          #     card_kepath_floorplan_nest_protect_alert_color: "rgba(var(--color-red),1)"
          #     card_kepath_floorplan_nest_protect_alert_entity: "[[[ return variables.ulm_card_kepath_floorplan_nest_protect_smoke_status ]]]"


card_kepath_floorplan_nest_protect_alert:
  show_icon: true
  show_label: false
  show_name: false
  icon: "[[[ return variables.card_kepath_floorplan_nest_protect_alert_icon ]]]"
  styles:
    icon:
      - width: "14px"
      - height: "14px"
      - line-height: "0"
      - color: "var(--card-background-color)"
    img_cell:
      - border-radius: "50%"
      - background-color: "[[[ return variables.card_kepath_floorplan_nest_protect_alert_color ]]]"
      - height: "16px"
      - width: "16px"
    card:
      - height: "100%"
      - box-shadow: "none"
      - padding: "0px"
      - border-radius: "50%"
      - margin: "1px"
  state:
    - operator: "template"
      value: "[[[ return states[variables.card_kepath_floorplan_nest_protect_alert_entity].state ]]]"
      styles:
        img_cell:
          - background-color: "rgba(100, 100, 100, 0.0)"
        card:
          - background-color: "rgba(100, 100, 100, 0.0)"
        icon:
          - color: "rgba(130, 130, 130, 0.3)"
    - operator: "template"
      value: "[[[ return (variables?.card_kepath_floorplan_nest_protect_alert_entity == 'unavailable' || variables?.card_kepath_floorplan_nest_protect_alert_entity == 'unknown' ? true : false) ]]]"
      styles:
        icon:
          - color: "rgba(var(--color-red), 0.6)"
        img_cell:
          - background-color: "rgba(130, 130, 130, 0.5)"
  tap_action:
    action: "more-info"


card_kepath_floorplan_thermostat:
  show_icon: true
  show_label: true
  show_name: true
  name: >
    [[[
      var currentTemp = "-";
      if (variables?.ulm_card_kepath_floorplan_thermostat_current_temperature_attribute) {
        if (states[entity.entity_id].attributes[variables.ulm_card_kepath_floorplan_thermostat_current_temperature_attribute]) {
          currentTemp = states[entity.entity_id].attributes[variables.ulm_card_kepath_floorplan_thermostat_current_temperature_attribute] + " &#8451;";
        }
      }
      return currentTemp;
    ]]]
  label: >
    [[[
      var currentHumidity = "-";
      if (variables?.ulm_card_kepath_floorplan_thermostat_humidity) {
        if (states[variables.ulm_card_kepath_floorplan_thermostat_humidity]?.state) {
          currentHumidity = states[variables.ulm_card_kepath_floorplan_thermostat_humidity].state + " &percnt;";
        }
      }
      return currentHumidity;
    ]]]
  icon: "mdi:fire-circle"
  styles:
    card:
      - background-color: "rgba(130, 130, 130, 0.3)"
      - backdrop-filter: "blur(8px)"
      - border-radius: "20px"
    label:
      - justify-self: "end"
      - align-self: "end"
      - font-weight: "bold"
      - font-size: "10px"
      - text-overflow: "ellipsis"
      - overflow: "hidden"
      - margin: "0 6px 0 6px"
      - color: "rgba(221, 221, 221, 0.4)"
    name:
      - justify-self: "start"
      - align-self: "start"
      - font-weight: "bold"
      - font-size: "10px"
      - text-overflow: "ellipsis"
      - overflow: "hidden"
      - margin: "0 6px 0 6px"
      - color: "rgba(221, 221, 221, 0.4)"
    icon:
      - width: "14px"
      - height: "14px"
      - line-height: "0"
      - color: "rgba(var(--color-yellow),0.8)"
      - margin-right: "15px"
      - display: "none"
    grid:
      - grid-template-areas: "'. climate_temperature_up climate_temperature_up .' '. climate_wanted_temperature climate_wanted_temperature i' 'l l n n' '. climate_temperature_down climate_temperature_down .'"
      - grid-template-columns: "2fr 1fr 1fr 2fr"
      - grid-template-rows: "16px 1fr 12px 16px"
      - justify-items: "center"
  state:
    - operator: "template"
      value: >
        [[[
          var isHeating = false;
          var useStateAsAction = false;
          if (variables?.ulm_card_kepath_floorplan_thermostat_action_use_state) {
            if (typeof variables.ulm_card_kepath_floorplan_thermostat_action_use_state === "boolean") {
              useStateAsAction = variables.ulm_card_kepath_floorplan_thermostat_action_use_state;
            }
          }

          if (useStateAsAction) {
            if (states[entity.entity_id]?.state) {
              if (states[entity.entity_id].state == "heat") {
                isHeating = true;
              }
            }
          } else {
            if (variables?.ulm_card_kepath_floorplan_thermostat_action_attribute) {
              if (states[entity.entity_id]?.attributes[variables.ulm_card_kepath_floorplan_thermostat_action_attribute]) {
                if (states[entity.entity_id].attributes[variables.ulm_card_kepath_floorplan_thermostat_action_attribute] == "heating") {
                  isHeating = true;
                }
              }
            }
          }
          return isHeating;
        ]]]
      styles:
        icon:
          - display: "inline"

    - operator: "template"
      value: "[[[ return ((states[entity.entity_id]?.state == 'unavailable' || states[entity.entity_id]?.state == 'unknown') ? true : false) ]]]"
      styles:
        custom_fields:
          climate_wanted_temperature:
            name:
              - color: "rgba(var(--color-red), 0.6)"
        card:
          - background-color: "rgba(130, 130, 130, 0.5)"
  tap_action:
    action: "more-info"
  custom_fields:
    climate_wanted_temperature:
      card:
        type: "custom:button-card"
        show_icon: false
        show_label: false
        show_name: true
        name: >
          [[[
            var wantedTemp = "-";
            if (variables?.ulm_card_kepath_floorplan_thermostat_wanted_temperature_attribute) {
              if(states[entity.entity_id].attributes[variables.ulm_card_kepath_floorplan_thermostat_wanted_temperature_attribute]) {
                wantedTemp = states[entity.entity_id].attributes[variables.ulm_card_kepath_floorplan_thermostat_wanted_temperature_attribute];
              }
            }
            return wantedTemp;
          ]]]
        styles:
          name:
            - justify-self: "start"
            - align-self: "start"
            - font-weight: "bold"
            - text-overflow: "ellipsis"
            - overflow: "hidden"
            - font-size: "16px"
            - color: "rgba(221, 221, 221, 1.0)"
          card:
            - background-color: "rgba(100, 100, 100, 0.0)"
            - box-shadow: "none"
        tap_action:
          action: "more-info"
          entity: "[[[ return entity.entity_id ]]]"

    climate_temperature_up:
      card:
        type: "custom:button-card"
        show_icon: true
        show_label: false
        show_name: false
        icon: "mdi:chevron-up"
        styles:
          icon:
            - width: "14px"
            - height: "14px"
            - line-height: "0"
            - color: "rgba(221, 221, 221, 1.0)"
          img_cell:
            - padding: "2px"
          card:
            - background-color: "rgba(100, 100, 100, 0.0)"
            - box-shadow: "none"
        tap_action:
          action: "call-service"
          service: "climate.set_temperature"
          service_data:
            temperature: >
              [[[
                var wantedTemp = parseFloat(0);
                if (variables?.ulm_card_kepath_floorplan_thermostat_wanted_temperature_attribute) {
                  if(states[entity.entity_id].attributes[variables.ulm_card_kepath_floorplan_thermostat_wanted_temperature_attribute]) {
                    wantedTemp = states[entity.entity_id].attributes[variables.ulm_card_kepath_floorplan_thermostat_wanted_temperature_attribute];
                    if (!isNaN(wantedTemp) && wantedTemp !== undefined){
                      wantedTemp = parseFloat(wantedTemp + 1);
                    }
                  }
                }
                return wantedTemp;
              ]]]
            entity_id: "[[[ return entity.entity_id ]]]"

    climate_temperature_down:
      card:
        type: "custom:button-card"
        show_icon: true
        show_label: false
        show_name: false
        icon: "mdi:chevron-down"
        styles:
          icon:
            - width: "14px"
            - height: "14px"
            - line-height: "0"
            - color: "rgba(221, 221, 221, 1.0)"
          img_cell:
            - padding: "2px"
          card:
            - background-color: "rgba(100, 100, 100, 0.0)"
            - box-shadow: "none"
        tap_action:
          action: "call-service"
          service: "climate.set_temperature"
          service_data:
            temperature: >
              [[[
                var wantedTemp = parseFloat(0);
                if (variables?.ulm_card_kepath_floorplan_thermostat_wanted_temperature_attribute) {
                  if(states[entity.entity_id].attributes[variables.ulm_card_kepath_floorplan_thermostat_wanted_temperature_attribute]) {
                    wantedTemp = states[entity.entity_id].attributes[variables.ulm_card_kepath_floorplan_thermostat_wanted_temperature_attribute];
                    if (!isNaN(wantedTemp) && wantedTemp !== undefined){
                      wantedTemp = parseFloat(wantedTemp - 1);
                    }
                  }
                }
                return wantedTemp;
              ]]]
            entity_id: "[[[ return entity.entity_id ]]]"


card_kepath_floorplan_network_item:
  template:
    - "ulm_gradient_green_to_red_18step"
  show_icon: true
  show_label: false
  show_name: false
  icon: >
    [[[
      return (variables?.ulm_card_kepath_floorplan_network_device_icon ? variables.ulm_card_kepath_floorplan_network_device_icon : "mdi:network-outline")
    ]]]
  styles:
    icon:
      - width: "18px"
      - height: "18px"
      - line-height: "0"
      - color: >
          [[[
            return (variables?.ulm_card_kepath_floorplan_network_device_color ? variables.ulm_card_kepath_floorplan_network_device_color : "#121212")
          ]]]
    img_cell:
      - border-radius: "50%"
      - height: "32px"
      - width: "32px"
      - background-color: >
          [[[
            var dataSpeed = 0;
            var result = 0;
            var color = "rgba(130, 130, 130, 0.6)";
            const numberArray = [0, 18, 36, 54, 72, 90, 108, 126, 144, 162, 180, 198, 216, 234, 252, 270, 288, 306, 324, 342, 360, 378, 396, 414, 432, 450, 468, 486, 504, 522, 540, 558, 576, 594, 612, 630, 648, 666, 684, 702];
            if (!isNaN(entity?.state)) {
              dataSpeed = Math.floor(entity.state * 100);
              const result = numberArray.findLast(element => element < dataSpeed);
              var gradient = "gradient_" + result;
              if (variables?.green_to_red_18step?.[gradient]) {
                color = variables?.green_to_red_18step?.[gradient];
                color = color.replace("1)", "0.6)"); //add 60% transparency
              }
            }
            return color;
          ]]]
      - backdrop-filter: "blur(8px)"
    card:
      - background-color: "rgba(100, 100, 100, 0.0)"
  state:
    - template:
      value: "[[[ return ((states[entity.entity_id]?.state == 'unavailable' || states[entity.entity_id]?.state == 'unknown') ? true : false) ]]]"
      styles:
        icon:
          - color: "rgba(var(--color-red), 0.6)"
        img_cell:
          - background-color: "rgba(130, 130, 130, 0.5)"
  tap_action:
    action: "more-info"


card_kepath_floorplan_lock:
  show_icon: true
  show_label: true
  show_name: false
  icon: >
    [[[
      var doorIcon = "mdi:door";
      if (variables?.ulm_card_kepath_floorplan_door_closed_icon) {
        doorIcon = variables.ulm_card_kepath_floorplan_door_closed_icon;
      }
      return doorIcon;
    ]]]
  label: >
    [[[
      var relativeDate = "unknown";
      if(variables?.ulm_card_kepath_floorplan_nest_protect_last_activity_entity) {
        if(variables?.ulm_card_kepath_floorplan_nest_protect_last_activity_attribute) {
          relativeDate = states[variables?.ulm_card_kepath_floorplan_nest_protect_last_activity_entity].attributes[variables?.ulm_card_kepath_floorplan_nest_protect_last_activity_attribute] ? states[variables.ulm_card_kepath_floorplan_nest_protect_last_activity_entity].attributes[variables.ulm_card_kepath_floorplan_nest_protect_last_activity_attribute] : "unknown"
        } else {
          relativeDate = states[variables?.ulm_card_kepath_floorplan_nest_protect_last_activity_entity].state ? states[variables.ulm_card_kepath_floorplan_nest_protect_last_activity_entity].state : "unknown"
        }
      }
      return relativeDate
    ]]]
  styles:
    icon:
      - width: "18px"
      - height: "18px"
      - line-height: "0"
      - color: "rgba(221, 221, 221, 1.0)"
    img_cell:
      - border-radius: "50%"
      - height: "32px"
      - width: "32px"
      - background-color: "rgba(130, 130, 130, 0.3)"
      - backdrop-filter: "blur(8px)"
    card:
      - background-color: "rgba(100, 100, 100, 0.0)"
    label:
      - justify-self: "start"
      - align-self: "start"
      - font-weight: "bold"
      - font-size: "12px"
      - margin: "0 12px 0 12px"
      - text-overflow: "ellipsis"
      - overflow: "hidden"
      - color: "rgba(221, 221, 221, 0.4)"
  tap_action:
    action: "more-info"
  state:
    - value: "on"
      icon: >
        [[[
          var doorIcon = "mdi:door-open";
          if (variables?.ulm_card_kepath_floorplan_door_open_icon) {
            doorIcon = variables.ulm_card_kepath_floorplan_door_open_icon;
          }
          return doorIcon;
        ]]]
      styles:
        icon:
          - color: "rgba(var(--color-green),1)"
        img_cell:
          - background-color: "rgba(var(--color-green), 0.2)"
    - operator: "template"
      value: "[[[ return (entity?.state == 'unavailable' || entity?.state == 'unknown' ? true : false) ]]]"
      styles:
        icon:
          - color: "rgba(var(--color-red), 0.6)"
        img_cell:
          - background-color: "rgba(130, 130, 130, 0.5)"
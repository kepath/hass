substitutions:
  device_name: shelly1l-study
  device_ip: 192.168.30.11
  ssid: !secret not_bottom_wifi_ssid
  max_temp: "80.0" #Centigrade

# Basic Config
esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: ${ssid}
  password: !secret not_wifi_password
  fast_connect: true
  manual_ip:
    static_ip: ${device_ip}
    gateway: 192.168.30.1
    subnet: 255.255.255.0
    dns1: 192.168.30.1

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${device_name}
    manual_ip:
      static_ip: 192.168.100.2
      gateway: 192.168.100.1
      subnet: 255.255.255.0
      dns1: 8.8.8.8
      dns2: 8.8.4.4
      
captive_portal:

logger:
  level: INFO
api:
ota:
web_server:
  port: 80
  
time:
  - platform: homeassistant
  - platform: sntp
    id: sntp_time
    servers: !secret ha_rj45_ip

#==============================================================
output:
  - platform: gpio
    pin: GPIO5
    id: shelly_1l_relay
    
# Text sensors with general information.
text_sensor:
  # Expose ESPHome version as sensor.
  - platform: version
    name: ${device_name} ESPHome Version
  # Expose WiFi information as sensors.
  - platform: wifi_info
    ip_address:
      name: ${device_name}-IP
    ssid:
      name: ${device_name}-SSID
    bssid:
      name: ${device_name}-BSSID

light:
  - platform: binary
    name: ${device_name}-light
    output: shelly_1l_relay
    id: lightid
    effects:

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO4
    name: ${device_name}-switch-1
    
    
    # config for multi click actions
    # on_multi_click:
    #   # double click
    #   - timing:
    #       - ON for at most 1s
    #       - OFF for at most 1s
    #       - ON for at most 1s
    #       - OFF for at least 0.2s
    #     then:
    #       - if:
    #           condition:
    #             and:
    #               - wifi.connected:
    #               - api.connected:
    #           # send double click event in case wifi and api are conncected
    #           then:
    #             - homeassistant.event:
    #                 event: esphome.button_pressed
    #                 data:
    #                   title: ${device_name}-double-click
    #           # toggle relay in case either wifi or api are not connected
    #           else:
    #             - light.toggle: lightid    
    
    
    on_state:
      then:
        - light.toggle: lightid
    id: switchid1
    filters:
      - delayed_on_off: 50ms
      
  - platform: gpio
    pin:
      number: GPIO14
    name: ${device_name}-switch-2
    
  - platform: status
    name: ${device_name}-status
    device_class: connectivity

sensor:
  - platform: ntc
    sensor: temp_resistance_reading
    name: ${device_name}-temperature
    unit_of_measurement: "Â°C"
    accuracy_decimals: 1
    icon: "mdi:thermometer"
    calibration:
      b_constant: 3350
      reference_resistance: 10kOhm
      reference_temperature: 298.15K
    on_value_range:
      - above: ${max_temp}
        then:
          - light.turn_off: lightid
          - homeassistant.service:
              service: persistent_notification.create
              data:
                title: Message from ${device_name}
              data_template:
                message: Switch turned off because temperature exceeded ${max_temp}C
  - platform: resistance
    id: temp_resistance_reading
    sensor: temp_analog_reading
    configuration: DOWNSTREAM
    resistor: 32kOhm
  - platform: adc
    id: temp_analog_reading
    pin: A0
  - platform: wifi_signal
    name: ${device_name}-RSSI
    update_interval: 60s
    icon: "mdi:wifi"

status_led:
  pin: GPIO0
#==============================================================